{
  "openapi": "3.0.0",
  "info": {
    "description": "Schematics Service is to provide the capability to manage resources of (cloud) provider infrastructure using file based configurations. With the Schematics service the customer is able to specify the required set of resources and their configuration in 'config files', and then pass these config files to the service to fulfill it by calling the necessary actions on the infrastructure. This principle is also known as Infrastructure as Code. For more information Please refer https://cloud.ibm.com/docs/schematics?topic=schematics-getting-started",
    "title": "IBM Cloud Schematics API",
    "version": "1.0",
    "x-alternate-name": "schematics",
    "x-last-updated": "2020-04-14"
  },
  "paths": {
    "/v1/version": {
      "get": {
        "tags": [
          "util"
        ],
        "summary": "Get Schematics API information",
        "description": "Retrieve detailed information about the IBM Cloud Schematics API version and the version of the provider plug-ins that the API uses.",
        "operationId": "get_schematics_version",
        "responses": {
          "200": {
            "description": "Successfully returned version information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "commitsha": "f905818892a0fa73d6b74792cfeabd0b49aeb930",
                      "builddate": "2019-11-01T07:06:27Z",
                      "buildno": "3230",
                      "terraform_version": "v0.12.24",
                      "terraform_provider_version": "v0.18.0",
                      "helm_version": "v2.14.2",
                      "helm_provider_version": "v0.10.0"
                    }
                  }
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/version"
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "schematicsVersion, detailedResponse, err := schematicsService.GetSchematicsVersion(&schematicsv1.GetSchematicsVersionOptions{})\n",
                      "if err != nil {\n",
                      "  panic(err)\n",
                      "}\n",
                      "\n",
                      "b, _ := json.MarshalIndent(schematicsVersion, \"\", \"  \")\n",
                      "fmt.Println(string(b))\n"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/locations": {
      "get": {
        "tags": [
          "util"
        ],
        "summary": "List supported Schematics locations",
        "description": "Retrieve a list of IBM Cloud locations where you can create Schematics workspaces. ",
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "list_schematics_location",
        "responses": {
          "200": {
            "description": "Successfully returned location information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchematicsLocations"
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "ID": "us",
                      "Name": "us",
                      "Country": "",
                      "Geography": "na",
                      "Kind": "country",
                      "Metro": "",
                      "MultizoneMetro": ""
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/locations -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "getSchematicsLocationOptions := schematicsService.NewListSchematicsLocationOptions()\n",
                      "\n",
                      "locations, detailedResponse, err := schematicsService.ListSchematicsLocation(getSchematicsLocationOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(locations, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/resource_groups": {
      "get": {
        "tags": [
          "util"
        ],
        "summary": "List resource groups",
        "description": "Retrieve a list of IBM Cloud resource groups that your account has access to. ",
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "list_resource_group",
        "responses": {
          "200": {
            "description": "Successfully returned resource group information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceGroupResponse"
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "resource_group_id": "469557713b904c6485d59fe833cf0a68",
                      "crn": "crn:v1:bluemix:public:resource-controller::a/6ef045fd2b43266cfe8e6388dd2ec098::resource-group:469557713b904c6485d59fe833cf0a68",
                      "name": "rg2",
                      "state": "ACTIVE",
                      "default": false,
                      "account_id": "6ef045fd2b43266cfe8e6388dd2ec098"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/resource_groups -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "listResourceGroupOptions := schematicsService.NewListResourceGroupOptions()\n",
                      "\n",
                      "resourceGroups, detailedResponse, err := schematicsService.ListResourceGroup(listResourceGroupOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(resourceGroups, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List workspaces",
        "description": "Retrieve a list of Schematics workspaces from your IBM Cloud account that you have access to. The list of workspaces that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only workspaces that are created in `us-south` or `us-east` are returned. \n\n For more information about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints). ",
        "operationId": "list_workspaces",
        "parameters": [
          {
            "description": "The position of the workspace in the list of workspaces, from which you want to start listing your workspaces. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces 2-6, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.",
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The maximum number of workspaces that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default. ",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully listed the workspaces that you have access to.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponseList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "offset": 0,
                      "limit": 1,
                      "count": 6,
                      "workspaces": [
                        {
                          "id": "myworkspace-123456",
                          "name": "myworkspace",
                          "type": [
                            "terraform_v0.12"
                          ],
                          "description": "",
                          "tags": [],
                          "created_at": "2019-08-21T14:07:21.400337433Z",
                          "created_by": "user@ibm.com",
                          "status": "INACTIVE",
                          "workspace_status_msg": {
                            "status_code": "",
                            "status_msg": ""
                          },
                          "workspace_status": {
                            "frozen": false,
                            "locked": false
                          },
                          "template_repo": {
                            "url": "https://github.com/myorg/myrepo"
                          },
                          "template_data": [
                            {
                              "id": "f4b7ad74-a24c-4a",
                              "folder": ".",
                              "type": "terraform_v0.12",
                              "values_url": "<values_url>",
                              "values": "",
                              "values_metadata": [
                                {
                                  "name": "variable",
                                  "type": "string"
                                }
                              ],
                              "variablestore": [
                                {
                                  "name": "variable",
                                  "secure": false,
                                  "value": "value",
                                  "type": "",
                                  "description": ""
                                }
                              ]
                            }
                          ],
                          "runtime_data": [
                            {
                              "id": "f4b7ad74-a24c-4a",
                              "engine_name": "terraform",
                              "engine_version": "terraformv0.12.24",
                              "state_store_url": "<state_store_url>",
                              "log_store_url": "<log_store_url>"
                            }
                          ],
                          "shared_data": {
                            "resource_group_id": ""
                          },
                          "updated_at": "0001-01-01T00:00:00Z",
                          "last_health_check_at": "0001-01-01T00:00:00Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Viewer`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "listWorkspacesOptions := schematicsService.NewListWorkspacesOptions()\n",
                      "\n",
                      "workspaceList, detailedResponse, err := schematicsService.ListWorkspaces(listWorkspacesOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(workspaceList, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Create a workspace",
        "description": "Create an IBM Cloud Schematics workspace that points to the source repository where your Terraform template or the IBM Cloud software template is stored. You can decide to create your workspace without connecting it to a GitHub or GitLab repository. Your workspace is then created with a **Draft** state. To later connect your workspace to a GitHub or GitLab repository, you must use the `PUT /v1/workspaces/{id}` API to update the workspace or use the `/v1/workspaces/{id}/templates/{template_id}/template_repo_upload` API to upload a TAR file instead. \n\n **Getting API endpoint**: \n\n * The Schematics API endpoint that you use to create the workspace determines where your Schematics actions run and your data is stored. See [API endpoints](/apidocs/schematics#api-endpoints) for more information. \n * If you use the API endpoint for a geography and not a specific location, such as North America, you can specify the location in your API request body. \n * If you do not specify the location in the request body, Schematics determines your workspace location based on availability. \n * If you use an API endpoint for a specific location, such as Frankfurt, the location that you enter in your API request body must match your API endpoint. \n * You also have the option to not specify a location in your API request body if you use a location-specific API endpoint. \n\n **Getting IAM access token**: \n * Before you create Schematics workspace, you need to create the IAM access token for your IBM Cloud Account. \n * To create IAM access token, use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>` and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. For more information, about creating IAM access token and API Docs, see [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key). \n * You can set the environment values  `export ACCESS_TOKEN=<access_token>` and `export REFRESH_TOKEN=<refresh_token>`. \n * You can use the obtained IAM access token in create workspace `curl` command.",
        "operationId": "create_workspace",
        "parameters": [
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, you need to create the IAM access token for your IBM Cloud Account. For more information, about creating IAM access token, refer, [Get token password](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password).",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.",
            "name": "X-Github-token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceCreateRequest"
              }
            }
          },
          "description": "Input parameter to create the IBM Cloud Schematics workspace.",
          "required": true
        },
        "x-codegen-request-body-name": "workspace",
        "responses": {
          "201": {
            "description": "Successfully created the workspace in IBM Cloud Schematics. Your resources are not provisioned until you use the `POST /workspaces/{id}/apply` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "myworkspace-123456",
                      "name": "myworkspace",
                      "type": [
                        "terraform_v0.12"
                      ],
                      "description": "This is a workspace created with the API",
                      "resource_group": "a1b23aa11bb22cc55",
                      "location": "eu-de",
                      "tags": [],
                      "created_at": "2019-11-06T16:19:32.352418401Z",
                      "created_by": "user@us.ibm.com",
                      "status": "INACTIVE",
                      "workspace_status_msg": {
                        "status_code": "",
                        "status_msg": ""
                      },
                      "workspace_status": {
                        "frozen": false,
                        "locked": false
                      },
                      "template_repo": {
                        "url": "https://github.com/myorg/myrepo"
                      },
                      "template_data": [
                        {
                          "id": "d1369548-1bc2-4d",
                          "folder": ".",
                          "type": "terraform_v0.12",
                          "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values",
                          "values": "",
                          "values_metadata": [
                            {
                              "name": "variable1",
                              "type": "value1"
                            },
                            {
                              "name": "variable2",
                              "type": "value2"
                            }
                          ],
                          "variablestore": [
                            {
                              "name": "variable1",
                              "secure": false,
                              "value": "value1",
                              "type": "",
                              "description": ""
                            },
                            {
                              "name": "variable2",
                              "secure": false,
                              "value": "value2",
                              "type": "",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "runtime_data": [
                        {
                          "id": "a123456b",
                          "engine_name": "terraform",
                          "engine_version": "v0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store"
                        }
                      ],
                      "shared_data": {
                        "resource_group_id": ""
                      },
                      "updated_at": "0001-01-01T00:00:00Z",
                      "last_health_check_at": "0001-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Verify that the information in your request body is complete and correctly formatted in JSON.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The workspace already exists. To find a list of workspaces, use the `GET /workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "The workspace is frozen and disabled for create. Unfreeze the workspace first before you try to create the workspace. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. \"IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region\". Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to create a workspace with a link to a GitHub repository",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\":\"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"location\": \"<location>\",\"description\": \"<workspace_description>\",\"resource_group\": \"<resource_group_ID>\",\"tags\": [],\"template_repo\": {\"url\": \"<source_repo_url>\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"variablestore\": [{\"name\": \"variable_name1\",\"value\": \"variable_value1\"},{\"name\": \"variable_name2\",\"value\": \"variable_value2\"}]}]}'"
                    ]
                  }
                ]
              },
              {
                "name": "Example request to create a workspace without a GitHub repository URL to upload a TAR file later",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\":\"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"location\": \"<location>\",\"description\": \"<workspace_description>\",\"resource_group\": \"<resource_group_ID>\",\"tags\": [],\"template_repo\": {\"url\": \"\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"variablestore\": [{\"name\": \"variable_name1\",\"value\": \"variable_value1\"},{\"name\": \"variable_name2\",\"value\": \"variable_value2\"}]}]}'"
                    ]
                  }
                ]
              },
              {
                "name": "Example request to create a workspace with an environment variables",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H \"Authorization: Bearer <access_token>\" -d '{\"name\":\"<workspace_name>\",\"type\": [\"terraform_v0.12\"],\"description\": \"<workspace_description>\",\"tags\": [],\"template_repo\": {\"url\": \"<source_repo_url>\"},\"template_data\": [{\"folder\": \".\",\"type\": \"terraform_v0.12\",\"env_values\":[{\"GIT_PASSWORD\":\"<yourtoken>\"},{\"GIT_ASKPASS\":\"<your_script_to_execute>\"}]}]}'"
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "templateSourceDataRequestModel := &schematicsv1.TemplateSourceDataRequest{\n",
                      "    Folder: core.StringPtr(\".\"),\n",
                      "    Type:   core.StringPtr(\"terraform_v0.12.20\"),\n",
                      "    Variablestore: []schematicsv1.WorkspaceVariableRequest{\n",
                      "        {\n",
                      "            Name:  core.StringPtr(\"<variable_name1>\"),\n",
                      "            Value: core.StringPtr(\"<variable_value1>\"),\n",
                      "        },\n",
                      "        {\n",
                      "            Name:  core.StringPtr(\"<variable_name2>\"),\n",
                      "            Value: core.StringPtr(\"<variable_value2>\"),\n",
                      "        },\n",
                      "    },\n",
                      "}\n",
                      "\n",
                      "templateRepoRequestModel := &schematicsv1.TemplateRepoRequest{\n",
                      "    URL: core.StringPtr(\"<source_repo_url>\"),\n",
                      "}\n",
                      "\n",
                      "createWorkspaceOptions := &schematicsv1.CreateWorkspaceOptions{\n",
                      "    Description:   core.StringPtr(\"<description>\"),\n",
                      "    Name:          core.StringPtr(\"<workspace_name>\"),\n",
                      "    TemplateData:  []schematicsv1.TemplateSourceDataRequest{*templateSourceDataRequestModel},\n",
                      "    TemplateRepo:  templateRepoRequestModel,\n",
                      "    Type:          []string{\"terraform_v0.12.20\"},\n",
                      "    Location:      core.StringPtr(\"<location>\"),\n",
                      "    ResourceGroup: core.StringPtr(\"<resource_group>\"),\n",
                      "    Tags:          []string{\"<tags>\"},\n",
                      "}\n",
                      "\n",
                      "workspaceResponse, detailedResponse, err := schematicsService.CreateWorkspace(createWorkspaceOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(workspaceResponse, \"\", \"  \")\n",
                      "fmt.Println(string(w))\n",
                      ""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get workspace details",
        "description": " Retrieve detailed information for a workspace in your IBM Cloud account. ",
        "operationId": "get_workspace",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve detailed information. To find the workspace ID, use the `GET /v1/workspaces` API. ",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved details about your workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "myworkspace-123456",
                      "name": "myworkspace",
                      "type": [
                        "terraform_v0.12"
                      ],
                      "description": "This is a workspace created with the API",
                      "resource_group": "aa11bb22aa11bb22",
                      "location": "eu-de",
                      "tags": [],
                      "created_at": "2019-11-06T16:19:32.352418401Z",
                      "created_by": "user@ibm.com",
                      "status": "INACTIVE",
                      "workspace_status_msg": {
                        "status_code": "",
                        "status_msg": ""
                      },
                      "workspace_status": {
                        "frozen": false,
                        "locked": false
                      },
                      "template_repo": {
                        "url": "https://github.com/myorg/myrepo"
                      },
                      "template_data": [
                        {
                          "id": "a123456",
                          "folder": ".",
                          "type": "terraform_v0.12",
                          "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456/values",
                          "values": "",
                          "values_metadata": [
                            {
                              "name": "variable1",
                              "type": "string"
                            },
                            {
                              "name": "variable2",
                              "type": "string"
                            }
                          ],
                          "variablestore": [
                            {
                              "name": "variable1",
                              "secure": false,
                              "value": "value1",
                              "type": "",
                              "description": ""
                            },
                            {
                              "name": "variable2",
                              "secure": false,
                              "value": "value2",
                              "type": "",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "runtime_data": [
                        {
                          "id": "a123456",
                          "engine_name": "terraform",
                          "engine_version": "v0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456/state_store",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456/log_store"
                        }
                      ],
                      "shared_data": {
                        "resource_group_id": ""
                      },
                      "updated_at": "0001-01-01T00:00:00Z",
                      "last_health_check_at": "0001-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Viewer`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspace` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: Bearer <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "workspaceDetails, detailedResponse, err := schematicsService.GetWorkspace(&schematicsv1.GetWorkspaceOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(workspaceDetails, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "patch": {
        "tags": [
          "workspaces"
        ],
        "summary": "Update workspace metadata",
        "description": "Use this API to update the following workspace metadata: \n\n * Workspace name (`name`) - **Note**: Updating the workspace name does not update the ID of the workspace. \n * Workspace description (`description`) \n * Tags (`tags[]`) \n * Resource group (`resource_group`) \n * Workspace status (`workspace_status.frozen`) \n\n\n **Tip**: If you want to update information about the Terraform template or IBM Cloud catalog software template that your workspace points to, use the `PUT /v1/workspaces/{id}` API. To update workspace variables, use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API.",
        "operationId": "update_workspace",
        "parameters": [
          {
            "description": "The ID of the workspace that you want to update. To find the ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          },
          "description": "Input parameters to update workspace metadata.",
          "required": true
        },
        "x-codegen-request-body-name": "workspace",
        "responses": {
          "200": {
            "description": "Successfully updated the workspace metadata.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "myworkspace-123456",
                      "name": "myworkspace",
                      "type": [
                        "terraform_v0.12"
                      ],
                      "description": "This is a workspace created with the API",
                      "resource_group": "a1b23aa11bb22cc55",
                      "location": "eu-de",
                      "tags": [],
                      "created_at": "2019-11-06T16:19:32.352418401Z",
                      "created_by": "user@us.ibm.com",
                      "status": "INACTIVE",
                      "workspace_status_msg": {
                        "status_code": "",
                        "status_msg": ""
                      },
                      "workspace_status": {
                        "frozen": false,
                        "locked": false
                      },
                      "template_repo": {
                        "url": "https://github.com/myorg/myrepo"
                      },
                      "template_data": [
                        {
                          "id": "d1369548-1bc2-4d",
                          "folder": ".",
                          "type": "terraform_v0.12",
                          "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values",
                          "values": "",
                          "values_metadata": [
                            {
                              "name": "variable1",
                              "type": "value1"
                            },
                            {
                              "name": "variable2",
                              "type": "value2"
                            }
                          ],
                          "variablestore": [
                            {
                              "name": "variable1",
                              "secure": false,
                              "value": "value1",
                              "type": "",
                              "description": ""
                            },
                            {
                              "name": "variable2",
                              "secure": false,
                              "value": "value2",
                              "type": "",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "runtime_data": [
                        {
                          "id": "a123456b",
                          "engine_name": "terraform",
                          "engine_version": "v0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store"
                        }
                      ],
                      "shared_data": {
                        "resource_group_id": ""
                      },
                      "updated_at": "0001-01-01T00:00:00Z",
                      "last_health_check_at": "0001-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID of a workspace, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "The workspace is frozen and disabled for update. Unfreeze the workspace first before you try to update the workspace. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PATCH --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\" -d '{\"name\":\"<workspace_name>\",\"description\": \"<workspace_description>\",\"tags\": [\"<tag1>\", \"<tag2>\"], \"resource_group\": \"<resource_grou>\", \"workspace_status\": {\"frozen\": <true_or_false>}}'"
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "updateWorkspaceOptions := &schematicsv1.UpdateWorkspaceOptions{\n",
                      "    Description:   core.StringPtr(\"<description>\"),\n",
                      "    Name:          core.StringPtr(\"<workspace_name>\"),\n",
                      "    ResourceGroup: core.StringPtr(\"<resource_group>\"),\n",
                      "    Tags:          []string{\"<tag1>\", \"<tag2>\"},\n",
                      "    WorkspaceStatus: &schematicsv1.WorkspaceStatusUpdateRequest {\n",
                      "        Frozen: core.BoolPtr(<true_or_false>),\n",
                      "    },\n",
                      "}\n",
                      "\n",
                      "workspaceUpdateResponse, detailedResponse, err := schematicsService.UpdateWorkspace(updateWorkspaceOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(workspaceUpdateResponse, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Update workspace",
        "description": "Use this API to update or replace the entire workspace, including the Terraform template (`template_repo`) or IBM Cloud catalog software template (`catalog_ref`) that your workspace points to.  \n\n\n **Tip**: If you want to update workspace metadata, use the `PATCH /v1/workspaces/{id}` API. To update workspace variables, use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API.",
        "operationId": "replace_workspace",
        "parameters": [
          {
            "description": "The ID of the workspace that you want to update. To find the ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateRequest"
              }
            }
          },
          "description": "Workspace",
          "required": true
        },
        "x-codegen-request-body-name": "workspace",
        "responses": {
          "200": {
            "description": "Successfully updated the workspace metadata.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "myworkspace-123456",
                      "name": "myworkspace",
                      "type": [
                        "terraform_v0.12"
                      ],
                      "description": "This is a workspace created with the API",
                      "resource_group": "a1b23aa11bb22cc55",
                      "location": "eu-de",
                      "tags": [],
                      "created_at": "2019-11-06T16:19:32.352418401Z",
                      "created_by": "user@us.ibm.com",
                      "status": "INACTIVE",
                      "workspace_status_msg": {
                        "status_code": "",
                        "status_msg": ""
                      },
                      "workspace_status": {
                        "frozen": false,
                        "locked": false
                      },
                      "template_repo": {
                        "url": "https://github.com/myorg/myrepo"
                      },
                      "template_data": [
                        {
                          "id": "d1369548-1bc2-4d",
                          "folder": ".",
                          "type": "terraform_v0.12",
                          "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values",
                          "values": "",
                          "values_metadata": [
                            {
                              "name": "variable1",
                              "type": "value1"
                            },
                            {
                              "name": "variable2",
                              "type": "value2"
                            }
                          ],
                          "variablestore": [
                            {
                              "name": "variable1",
                              "secure": false,
                              "value": "value1",
                              "type": "",
                              "description": ""
                            },
                            {
                              "name": "variable2",
                              "secure": false,
                              "value": "value2",
                              "type": "",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "runtime_data": [
                        {
                          "id": "a123456b",
                          "engine_name": "terraform",
                          "engine_version": "v0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store"
                        }
                      ],
                      "shared_data": {
                        "resource_group_id": ""
                      },
                      "updated_at": "0001-01-01T00:00:00Z",
                      "last_health_check_at": "0001-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID of a workspace, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Could not update the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PUT --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\" -d '{\"template_repo\": { \"url\": \"<source_repo_url>\", \"repo_url\": \"<catalog_repo_url>\"}, \"catalog_ref\": {\"item_id\": \"<item_ID>\", \"item_name\": \"<item_name>\", \"item_url\": \"<item_url>\", \"item_readme_url\": \"<item_readme_url>\", \"item_icon_url\": \"<item_icon_url>\", \"offering_version\": \"<offering_version>\", \"launch_url\": \"<launch_url>\"}}'"
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "templateRepoRequestUpdateModel := &schematicsv1.TemplateRepoUpdateRequest{\n",
                      "    URL: core.StringPtr(\"<source_repo_url>\"),\n",
                      "    RepoURL: core.StringPtr(\"<catalog_repo_url>\"),\n",
                      "}\n",
                      "\n",
                      "replaceWorkspaceOptions := &schematicsv1.ReplaceWorkspaceOptions{\n",
                      "    WID:          ws.ID,\n",
                      "    TemplateRepo: templateRepoRequestUpdateModel,\n",
                      "    CatalogRef: &schematicsv1.CatalogRef{\n",
                      "        ItemID:          core.StringPtr(\"<item_id>\"),\n",
                      "        ItemName:        core.StringPtr(\"<item_name>\"),\n",
                      "        ItemURL:         core.StringPtr(\"<item_url>\"),\n",
                      "        ItemReadmeURL:   core.StringPtr(\"<item_readme_url>\"),\n",
                      "        ItemIconURL:     core.StringPtr(\"<item_icon_url>\"),\n",
                      "        OfferingVersion: core.StringPtr(\"<offering_version>\"),\n",
                      "        LaunchURL:       core.StringPtr(\"<launch_url>\"),\n",
                      "    },\n",
                      "}\n",
                      "\n",
                      "replaceResponse, detailedResponse, err := schematicsService.ReplaceWorkspace(replaceWorkspaceOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(replaceResponse, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "tags": [
          "workspaces"
        ],
        "summary": "Delete a workspace",
        "description": "Deletes a workspace from IBM Cloud Schematics. Deleting a workspace does not automatically remove the IBM Cloud resources that the workspace manages. To remove all resources that are associated with the workspace, use the `DELETE /v1/workspaces/{id}?destroyResources=true` API. \n\n **Note**: If you delete a workspace without deleting the resources, you must manage your resources with the resource dashboard or CLI afterwards. You cannot use IBM Cloud Schematics anymore to manage your resources. ",
        "operationId": "delete_workspace",
        "parameters": [
          {
            "description": "The ID of the workspace that you want to delete. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If set to `true`, refresh token header configuration is required to delete all the Terraform resources, and the Schematics workspace. If set to `false`, you can remove only the workspace. Your Terraform resources are still available and must be managed with the resource dashboard or CLI.",
            "name": "destroyResources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
            "name": "refresh_token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceDeleteResponse"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Could not delete the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id} -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "_, detailedResponse, err := schematicsService.DeleteWorkspace(&schematicsv1.DeleteWorkspaceOptions{\n",
                      "    WID:          <workspace_id>,\n",
                      "    RefreshToken: core.StringPtr(\"<refresh_token>\"),\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      ""
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/templates/{t_id}/template_repo_upload": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Upload a TAR file to your workspace",
        "description": "Provide your Terraform template by uploading a TAR file from your local machine. Before you use this API, you must create a workspace without a link to a GitHub or GitLab repository with the `POST /v1/workspaces` API.",
        "parameters": [
          {
            "description": "The ID of the workspace where you want to upload your `.tar` file. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Terraform template in your workspace. When you create a workspace, a unique ID is assigned to your Terraform template, even if no template was provided during workspace creation. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "description": "The TAR file that holds your Terraform template.",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "operationId": "upload_template_tar",
        "responses": {
          "200": {
            "description": "Successfully uploaded the TAR file to your workspace. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateRepoTarUploadResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "da53f57b-f7de-49",
                      "file_value": "mytarfile.tar",
                      "has_received_file": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The tar file could not be read. Make sure that the tar file was created in the right format and try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The workspace ID could not be found. Retrieve the workspace ID by using the `GET /v1/workspaces` API and try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/template_repo_upload -H \"Authorization: <iam_token>\" -H \"Content-Type: multipart/form-data\" --form \"file =@<file_path>/mytarfile.tar\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "fileReader, _ := os.Open(<path_of_tar_file>)\n",
                      "fileReaderWrapper := ioutil.NopCloser(fileReader)\n",
                      "\n",
                      "uploadTarOptions := &schematicsv1.UploadTemplateTarOptions{\n",
                      "    WID:             <workspace_id>,\n",
                      "    TID:             <template_id>,\n",
                      "    File:            fileReaderWrapper,\n",
                      "    FileContentType: core.StringPtr(\"multipart/form-data\"),\n",
                      "}\n",
                      "\n",
                      "uploadResult, httpResponse, err := schematicsService.UploadTemplateTar(uploadTarOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(uploadResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/plan": {
      "post": {
        "tags": [
          "workspaces"
        ],
        "summary": "Perform a Schematics plan action",
        "description": "Run a Schematics plan action against your workspace. The plan action creates a summary of IBM Cloud resources that must be created, modified, or deleted to achieve the state that is described in the Terraform or IBM Cloud catalog template that your workspace points to. During this time, you cannot make changes to your workspace. You can use the summary to verify your changes before you apply the template in IBM Cloud. \n\n\n **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or `Stopped` state to perform a Schematics plan action. \n\n\n **Note**: This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. ",
        "operationId": "plan_workspace_command",
        "parameters": [
          {
            "description": "The ID of the workspace, for which you want to run a Schematics plan action. To find the ID of your workspace, use the `GET /v1/workspaces` API. ",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
            "name": "delegated_token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
            "name": "refresh_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successfully performed a Schematics plan action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityPlanResult"
                },
                "examples": {
                  "response": {
                    "value": {
                      "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Verify that you provided all input parameters, such as the IAM refresh token. To create a refresh token, use the IAM `POST /identity/token` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization or refresh token token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, make sure that you have the required permissions to work with the resources that are described in your templates.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Could not perform a plan action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to perform a Schematics plan action",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X POST https://schematics.cloud.ibm.com/v1/workspaces/{id}/plan -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs for an activity ID",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "planWorkspaceCommandOptions := &schematicsv1.PlanWorkspaceCommandOptions{\n",
                      "    WID:          <workspace_id>,\n",
                      "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                      "}\n",
                      "\n",
                      "planResult, detailedResponse, err := schematicsService.PlanWorkspaceCommand(planWorkspaceCommandOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(planResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/apply": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Perform a Schematics apply action",
        "description": "Run a Schematics apply action against your workspace. An apply action provisions, modifies, or removes the IBM Cloud resources that you described in the Terraform template that your workspace points to. Depending on the type and number of resources that you want to provision or modify, this process might take a few minutes, or even up to hours to complete. During this time, you cannot make changes to your workspace. After all updates are applied, the state of your IBM Cloud resources is stored in a Terraform state file that IBM Cloud Schematics uses to determine what resources exist in your IBM Cloud account. \n\n\n **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or `Stopped` state to perform a Schematics apply action. \n\n\n **Note**: This API returns an activity ID that you use to retrieve the log URL with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n\n **Important:** Applying a template might incur costs. Make sure to review the pricing information for the resources that you specified in your templates before you apply the template in IBM Cloud. To find a summary of actions that Schematics is about to perform, create a Terraform execution plan with the `POST /v1/workspaces/{id}/plan` API.  ",
        "operationId": "apply_workspace_command",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to run a Schematics apply action. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only. ",
            "name": "delegated_token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
            "name": "refresh_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceActivityOptions"
              }
            }
          },
          "description": "A list of resources that you want to target for creation or update. Resources must be targeted by using the resource address, such as `ibm_is_instance.vm`. If the targeted resource specifies the `count` attribute and no index is specified in the resource address, such as `ibm_is_instance.vm1[1]`, all instances that share the same resource name are targeted for creation or update. For more information about the Terraform target feature, see [Resource targeting](https://www.terraform.io/docs/commands/plan.html#resource-targeting){: external}."
        },
        "x-codegen-request-body-name": "targeted_resources",
        "responses": {
          "202": {
            "description": "Successfully ran a Schematics apply action against your workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityApplyResult"
                },
                "examples": {
                  "response": {
                    "value": {
                      "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM refresh token for your IBM Cloud account. To retrieve the refresh token, use the IAM `POST /identity/token` API. For more information, see the [IAM API documentation](https://cloud.ibm.com/apidocs/iam-identity-token-api).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, make sure that you have the required permissions to work with the IBM Cloud resource that you configured in your Terraform template.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "Not found. The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Apply failed. Could not perform an apply action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to perform a Schematics apply action",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/apply -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs for an activity ID",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "applyWorkspaceCommandOptions := &schematicsv1.ApplyWorkspaceCommandOptions{\n",
                      "    WID:          <workspace_id>,\n",
                      "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                      "}\n",
                      "\n",
                      "applyResult, detailedResponse, err := schematicsService.ApplyWorkspaceCommand(applyWorkspaceCommandOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(applyResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/destroy": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Perform a Schematics destroy action",
        "description": "Run a Schematics destroy action against your workspace. A destroy action removes all IBM Cloud resources that are associated with your workspace. Removing your resources does not delete the Schematics workspace. To delete the workspace, use the `DELETE /v1/workspaces/{id}` API. This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. \n\n\n **Important**: Your workspace must be in an `Active`, `Failed`, or `Stopped` state to perform a Schematics destroy action. \n\n\n **Note**: Deleting IBM Cloud resources cannot be undone. Make sure that you back up any required data before you remove your resources. ",
        "operationId": "destroy_workspace_command",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to perform a Schematics destroy action. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
            "name": "delegated_token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
            "name": "refresh_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceActivityOptions"
              }
            }
          },
          "description": "A list of resources that you want to target for deletion. Resources must be targeted by using the resource address, such as `ibm_is_instance.vm`. If the targeted resource specifies the `count` attribute and no index is specified in the resource address, such as `ibm_is_instance.vm[1]`, all instances that share the same resource name are targeted for deletion. Also, if the targeted resource can only be deleted if dependent resources are deleted, such as a VPC can only be deleted if the attached subnet is deleted, then all dependent resources are targeted for deletion as well. For more information about the Terraform target feature, see [Resource targeting](https://www.terraform.io/docs/commands/plan.html#resource-targeting){: external}."
        },
        "x-codegen-request-body-name": "targeted_resources",
        "responses": {
          "202": {
            "description": "Successfully initiated a Schematics destroy action against your workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityDestroyResult"
                },
                "examples": {
                  "response": {
                    "value": {
                      "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. In addition, verify that you have the required resource permissions to remove the resource from IBM Cloud. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Could not perform a destroy action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests have been made within a time window. IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region. Wait before calling the API again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "503": {
            "description": "IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to perform a Schematics destroy action",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/destroy -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs for an activity ID",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "destroyWorkspaceCommandOptions := &schematicsv1.DestroyWorkspaceCommandOptions{\n",
                      "    WID:          <workspace_id>,\n",
                      "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                      "}\n",
                      "\n",
                      "destroyResult, detailedResponse, err := schematicsService.DestroyWorkspaceCommand(destroyWorkspaceCommandOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(destroyResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/refresh": {
      "put": {
        "tags": [
          "workspaces"
        ],
        "summary": "Perform a Schematics refresh action",
        "description": "Run a Schematics refresh action against your workspace. A refresh action validates the IBM Cloud resources in your account against the state that is stored in the Terraform statefile of your workspace. If differences are found, the Terraform statefile is updated accordingly. This API returns an activity ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. ",
        "operationId": "refresh_workspace_command",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to perform a Schematics refresh action. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM delegated token for your IBM Cloud account. This token is required for requests that are sent via the UI only.",
            "name": "delegated_token",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM refresh token is required only if you want to delete all the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. \n\n **Retrieving refresh token**: \n * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST \"https://iam.cloud.ibm.com/identity/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -d \"grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY\" -u bx:bx`. \n * For more information, about creating IAM access token and API Docs, refer, [IAM access token](https://cloud.ibm.com/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](https://cloud.ibm.com/apidocs/iam-identity-token-api#create-api-key).  \n\n **Limitation**: \n * If the token is expired, you can use `refresh token` to get a new IAM access token. \n * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. \n * When the IAM access token is about to expire, use the API key to create a new access token.",
            "name": "refresh_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successfully initiated a Schematics refresh action against your workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityRefreshResult"
                },
                "examples": {
                  "response": {
                    "value": {
                      "activityid": "12a111a1aa1111aaaaa123a11112222a11"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "One or more input parameters could not be found or are provided in the wrong format.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics.  ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "409": {
            "description": "Could not perform a refresh action against the workspace. The workspace is frozen, or a Schematics create, update, plan, apply, delete, or refresh action has not completed yet. Unfreeze the workspace first or wait until the create, update, plan, apply, delete, or refresh action completes before you try again.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to perform a Schematics refresh action",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/refresh -H \"Authorization: Bearer <iam_token>\" -H \"refresh_token: <refresh_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs for an activity ID",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_url> -H \"Authorization: Bearer <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "refreshWorkspaceCommandOptions := &schematicsv1.RefreshWorkspaceCommandOptions{\n",
                      "    WID:          <workspace_id>,\n",
                      "    RefreshToken: core.StringPtr(\"refresh_token\"),\n",
                      "}\n",
                      "\n",
                      "refreshResult, detailedResponse, err := schematicsService.RefreshWorkspaceCommand(refreshWorkspaceCommandOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(refreshResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/actions": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List all workspace actions",
        "description": "Retrieve a list of all actions that ran against a workspace. Actions are generated when you use the `PUT /v1/workspaces/{id}/apply`, `POST /v1/workspaces/{id}/plan`, or `DELETE /v1/workspaces/{id}/destroy` API.  ",
        "operationId": "list_workspace_activities",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to list actions. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum number of actions that you want to include in your response. The number that you enter must be between 1 and 200. If no number is provided, 100 is used by default.",
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The position of the action in the list of actions, from which you want to start listing your actions. For example, if you have three actions, the first action is assigned position number 0, the second action is assigned position number 1, and so forth. If you have 6 actions and you want to list the details for actions 2-6, enter 1. To limit the number of actions that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.",
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activities for the workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivities"
                },
                "examples": {
                  "response": {
                    "value": {
                      "workspace_name": "myworkspace",
                      "workspace_id": "myworkspace-123456",
                      "actions": [
                        {
                          "action_id": "a11223334b11224345",
                          "name": "PLAN",
                          "status": "COMPLETED",
                          "message": [],
                          "performed_by": "user@us.ibm.com",
                          "performed_at": "2019-08-21T14:07:25.814722573Z",
                          "templates": [
                            {
                              "template_id": "a1234b-2124",
                              "template_type": "terraform_v0.12",
                              "start_time": "2019-08-21T14:07:26.120106199Z",
                              "end_time": "2019-08-21T14:07:30.088495607Z",
                              "status": "COMPLETED",
                              "message": "{\"messagekey\":\"M2001_ActivitySuccessful\",\"parms\":{},\"requestid\":\"1234b1234b123-1234n13\",\"timestamp\":\"2019-08-21T14:07:30.088498532Z\"}",
                              "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1234b-2124/log_store/actions/11223334b11224345"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivities"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "listWorkspaceActivitiesOptions := &schematicsv1.ListWorkspaceActivitiesOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "}\n",
                      "\n",
                      "listWorkspaceActivitiesResult, detailedResponse, err := schematicsService.ListWorkspaceActivities(listWorkspaceActivitiesOptions)\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(listWorkspaceActivitiesResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/actions/{activity_id}": {
      "get": {
        "description": "Get the details for a workspace action that ran against the workspace. This API returns a URL to the log file that you can retrieve by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.",
        "summary": "Get workspace action details",
        "tags": [
          "workspaces"
        ],
        "operationId": "get_workspace_activity",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve action details. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the action for which you want to retrieve details. To find the action ID, use the `GET /v1/workspaces/{id}/actions` API.",
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved details about the action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivity"
                },
                "examples": {
                  "response": {
                    "value": {
                      "action_id": "a11223334b11224345",
                      "name": "PLAN",
                      "status": "COMPLETED",
                      "message": [],
                      "performed_by": "user@us.ibm.com",
                      "performed_at": "2019-08-21T14:07:25.814722573Z",
                      "templates": [
                        {
                          "template_id": "a1234b-2124",
                          "template_type": "terraform_v0.12",
                          "start_time": "2019-08-21T14:07:26.120106199Z",
                          "end_time": "2019-08-21T14:07:30.088495607Z",
                          "status": "COMPLETED",
                          "message": "{\"messagekey\":\"M2001_ActivitySuccessful\",\"parms\":{},\"requestid\":\"1234b1234b123-1234n13\",\"timestamp\":\"2019-08-21T14:07:30.088498532Z\"}",
                          "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1234b-2124/log_store/actions/11223334b11224345"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "activityResponse, detailedResponse, err := schematicsService.GetWorkspaceActivity(&schematicsv1.GetWorkspaceActivityOptions{\n",
                      "    WID:        <workspace_id>,\n",
                      "    ActivityID: <activity_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(activityResponse, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "delete": {
        "description": "Stop a Schematics apply action that currently runs against your workspace. Only Schematics apply actions can be stopped with this API. \n\n **Note**: If you remove the Schematics apply action that runs against your workspace, any changes to your IBM Cloud resources that are already applied are not reverted. If a creation, update, or deletion is currently in progress, Schematics waits for the action to be completed first. Then, any other resource creations, updates, or deletions that are included in your Terraform template file are ignored. ",
        "summary": "Stop a Schematics apply action",
        "operationId": "delete_workspace_activity",
        "tags": [
          "workspaces"
        ],
        "parameters": [
          {
            "description": "The ID of the workspace where you want to stop the Schematics apply action. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Schematics apply action that you want to stop. To find the action ID, use the `GET /v1/workspaces/{id}/actions` API. Note that the action name must be `apply`.",
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stopped your Schematics apply action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityApplyResult"
                }
              }
            }
          },
          "400": {
            "description": "The specified action cannot be stopped because the action completed successfully or a user in the account already requested to stop this action. Use the `GET /v1/workspace/{id}/actions` API to find the details for your action. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "405": {
            "description": "The specified action is not a Schematics apply action. Verify that you entered the correct action ID. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "_, detailedResponse, err := schematicsService.DeleteWorkspaceActivity(&schematicsv1.DeleteWorkspaceActivityOptions{\n",
                      "    WID:        <workspace_id>,\n",
                      "    ActivityID: <activity_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/actions/{activity_id}/logs": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get workspace action log URL",
        "description": "Get the Terraform log file URL for a workspace action. You can retrieve the log URL for actions that were created with the `PUT /v1/workspaces/{id}/apply`, `POST /v1/workspaces/{id}/plan`, or `DELETE /v1/workspaces/{id}/destroy` API. ",
        "operationId": "get_workspace_activity_logs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve action logs. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the action for which you want to retrieve the log file URL. To find the action ID, use the `GET /v1/workspaces/{id}/actions` API.",
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the log file URL for your action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityLogs"
                },
                "examples": {
                  "response": {
                    "value": {
                      "action_id": "123456ba12345b",
                      "name": "APPLY",
                      "templates": [
                        {
                          "template_id": "a1245319-b1235",
                          "template_type": "terraform_v0.12",
                          "log_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1245319-b1235/log_store/actions/7123456ba12345b"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you have the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces` API. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to retrieve the log URL for an action",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id}/logs -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs from a log URL",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_url> -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceActivityLogs(&schematicsv1.GetWorkspaceActivityLogsOptions{\n",
                      "    WID:        <workspace_id>,\n",
                      "    ActivityID: <activity_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/log_stores": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "description": "Retrieve the log file URL for the latest action of a template that ran against your workspace. You use this URL to retrieve detailed logs for the latest action. ",
        "summary": "Get latest workspace action log URL for all workspace templates",
        "operationId": "get_workspace_log_urls",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve log store URLs. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the log URL for the most recent action that ran against your workspace.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogStoreResponseList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "runtime_data": [
                        {
                          "id": "a134567b24-12",
                          "engine_name": "terraform",
                          "engine_version": "terraformv0.12.24",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a134567b24-12/log_store"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to get the log store URL of the most recent action that ran against your workspace",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/log_stores -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to retrieve logs from the log store URL",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <log_store_url> -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceLogUrls(&schematicsv1.GetWorkspaceLogUrlsOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/runtime_data/{t_id}/log_store/actions/{activity_id}": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "description": "Show the Terraform logs for an action that ran against your workspace. ",
        "summary": "Show logs for a workspace action",
        "operationId": "get_template_activity_log",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve action logs. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the action (activity) that ran against your workspace ID. To find the action ID, use the `GET /v1/workspaces/{id}/actions` API.",
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template. To find the ID, use the `GET /v1/workspaces` API.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to replace the first line in each Terraform command section, such as `Terraform INIT` or `Terraform PLAN`, with `Schematics INIT` (`Schematics PLAN`) in your log output. In addition, the log lines `Starting command: terraform init -input=false -no-color` and `Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color` are suppressed. All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the `log_tf_prefix` option.",
            "name": "log_tf_cmd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to remove all Terraform command prefixes from each Terraform command section of your log output.",
            "name": "log_tf_prefix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to remove any `null_resource` log lines from your log output. This option can be used only if you defined a `null_resource` in your Terraform configuration file.",
            "name": "log_tf_null_resource",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `true` to show a new line instead of `\\n` for multi-line Ansible logs. This option is available only if you run Ansible code that creates Ansible log output.",
            "name": "log_tf_ansible",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Terraform logs for a workspace action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceActivityTemplateLogString"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace, action, or template could not be found. Verify that you entered the correct workspace, action ID, and template ID. To find the ID of your workspace or template, use the `GET /v1/workspaces API`. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store/actions/{action_id} -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "activityLogResult, detailedResponse, err := schematicsService.GetTemplateActivityLog(&schematicsv1.GetTemplateActivityLogOptions{\n",
                      "    WID:        <workspace_id>,\n",
                      "    TID:        <template_id>,\n",
                      "    ActivityID: <activity_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(activityLogResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/runtime_data/{t_id}/log_store": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Show logs for the latest action for a workspace template",
        "description": "Show the Terraform logs for the most recent action of a template that ran against your workspace.",
        "operationId": "get_template_logs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve action logs. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID that was assigned to your Terraform template or IBM Cloud catalog software template. To find the ID, use the `GET /v1/workspaces` API.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to replace the first line in each Terraform command section, such as `Terraform INIT` or `Terraform PLAN`, with `Schematics INIT` (`Schematics PLAN`) in your log output. In addition, the log lines `Starting command: terraform init -input=false -no-color` and `Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color` are suppressed. All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the `log_tf_prefix` option.",
            "name": "log_tf_cmd",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to remove all Terraform command prefixes from each Terraform command section of your log output.",
            "name": "log_tf_prefix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `false` to remove any `null_resource` log lines from your log output. This option can be used only if you defined a `null_resource` in your Terraform configuration file.",
            "name": "log_tf_null_resource",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Enter `true` to show a new line instead of `\n` for multi-line Ansible logs. This option is available only if you run Ansible code that creates Ansible log output.",
            "name": "log_tf_ansible",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the Terraform logs for the most recent workspace action.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateLogStoreString"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the ID of your workspace or template, use the `GET /v1/workspaces API`. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "templateLogResult, detailedResponse, err := schematicsService.GetTemplateLogs(&schematicsv1.GetTemplateLogsOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "    TID: <template_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(templateLogResult, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/state_stores": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get Terraform statefile URL",
        "description": "Retrieve the URL to the Terraform statefile (`terraform.tfstate`). You use the URL to access the Terraform statefile. The Terraform statefile includes detailed information about the IBM Cloud resources that you provisioned with IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. To show the content of the Terraform statefile, use the `GET /v1/workspaces/{id}/runtime_data/{template_id}/state_store` API.",
        "operationId": "get_workspace_state",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the Terraform statefile URL. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the URL to the Terraform statefile.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateStoreResponseList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "runtime_data": [
                        {
                          "id": "a111111b11-1aa1-1a",
                          "engine_name": "terraform",
                          "engine_version": "terraformv0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a111111b11-1aa1-1a/state_store"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request to retrieve the Terraform statefile URL",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/state_stores -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              },
              {
                "name": "Example request to show the Terraform statefile content by using the statefile URL",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET <state_store_url> -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "stateFile, detailedResponse, err := schematicsService.GetWorkspaceState(&schematicsv1.GetWorkspaceStateOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(stateFile, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/runtime_data/{t_id}/state_store": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Show Terraform statefile content",
        "description": "Show the content of the Terraform statefile (`terraform.tfstate`) that was created when your Terraform template was applied in IBM Cloud. The statefile holds detailed information about the IBM Cloud resources that were created by IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. ",
        "operationId": "get_workspace_template_state",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the Terraform statefile. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Terraform template for which you want to retrieve the Terraform statefile. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the information from the Terraform statefile.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateStateStore"
                },
                "examples": {
                  "response": {
                    "value": {
                      "version": 3,
                      "terraform_version": "0.11.14",
                      "serial": 1,
                      "lineage": "98aba884-11c1-7e45-f9d6-f895bbf80654",
                      "modules": [
                        {
                          "path": [
                            "root"
                          ],
                          "outputs": {},
                          "resources": {
                            "data.ibm_is_image.ubuntu": {
                              "type": "ibm_is_image",
                              "depends_on": [],
                              "primary": {
                                "id": "abc111-1111-1111-aaaa-123456789",
                                "attributes": {
                                  "architecture": "amd64",
                                  "crn": "crn:v1:bluemix:public:is:us-south:::image:abc111-1111-1111-aaaa-123456789",
                                  "id": "abc111-1111-1111-aaaa-123456789",
                                  "name": "ubuntu-18.04-amd64",
                                  "os": "ubuntu-18-04-amd64",
                                  "status": "available",
                                  "visibility": "public"
                                },
                                "meta": {},
                                "tainted": false
                              },
                              "deposed": [],
                              "provider": "provider.ibm"
                            },
                            "data.ibm_is_ssh_key.ssh_key_id": {
                              "type": "ibm_is_ssh_key",
                              "depends_on": [],
                              "primary": {
                                "id": "111111-0000-0001-0000-0000001111a1",
                                "attributes": {
                                  "fingerprint": "SHA256:A1B3aaaabbb3A/ABCDEaaAA",
                                  "id": "111111-0000-0001-0000-0000001111a1",
                                  "length": "2048",
                                  "name": "mykey",
                                  "type": "rsa"
                                },
                                "meta": {},
                                "tainted": false
                              },
                              "deposed": [],
                              "provider": "provider.ibm"
                            }
                          },
                          "depends_on": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the Writer service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/state_store -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "statefile, detailedResponse, err := schematicsService.GetWorkspaceTemplateState(&schematicsv1.GetWorkspaceTemplateStateOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "    TID: <template_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(statefile, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/resources": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List workspace resources",
        "description": "Retrieve a list of IBM Cloud resources that you created with your workspace.",
        "operationId": "get_workspace_resources",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the associated IBM Cloud resources. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the resources in JSON format.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateResourcesList"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "a12v3411-11a11",
                      "folder": ".",
                      "type": "terraform_v0.12",
                      "resources": [
                        {
                          "resource_id": "1234a678-1234-54a1-9223-1a111b2222",
                          "resource_name": "ibm_is_subnet.subnet1",
                          "resource_type": "ibm_is_subnet",
                          "resource_crn": "",
                          "resource_icon_url": "",
                          "resource_controller_url": "",
                          "resource_group_name": "",
                          "resource_status": ""
                        },
                        {
                          "resource_id": "1234a678-1234-54a1-9223-1a111b2223",
                          "resource_name": "ibm_is_vpc.vpc",
                          "resource_type": "ibm_is_vpc",
                          "resource_crn": "",
                          "resource_icon_url": "",
                          "resource_controller_url": "",
                          "resource_group_name": "",
                          "resource_status": ""
                        }
                      ],
                      "related_resources": [
                        {
                          "resource_id": "data.ibm_is_image.ubuntu",
                          "resource_name": "",
                          "resource_type": "ibm_is_image",
                          "resource_crn": "",
                          "resource_icon_url": "",
                          "resource_controller_url": "",
                          "resource_group_name": "",
                          "resource_status": ""
                        },
                        {
                          "resource_id": "data.ibm_resource_group.group",
                          "resource_name": "",
                          "resource_type": "ibm_resource_group",
                          "resource_crn": "",
                          "resource_icon_url": "",
                          "resource_controller_url": "",
                          "resource_group_name": "",
                          "resource_status": ""
                        },
                        {
                          "resource_id": "data.ibm_is_ssh_key.ssh_key_id",
                          "resource_name": "",
                          "resource_type": "ibm_is_ssh_key",
                          "resource_crn": "",
                          "resource_icon_url": "",
                          "resource_controller_url": "",
                          "resource_group_name": "",
                          "resource_status": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you have the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspace` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/resources -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "resourcesList, detailedResponse, err := schematicsService.GetWorkspaceResources(&schematicsv1.GetWorkspaceResourcesOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(resourcesList, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/output_values": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List workspace output values",
        "description": "Retrieve a list of Terraform output variables. You define output values in your Terraform template to include information that you want to make accessible for other Terraform templates. ",
        "operationId": "get_workspace_outputs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve output values. To find the workspace ID, use the `GET /workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the output values in JSON format.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OutputValues"
                },
                "examples": {
                  "response": {
                    "value": {
                      "id": "cef7da5d-dd7c-48",
                      "folder": ".",
                      "type": "terraform_v0.12",
                      "output_values": [
                        {
                          "sshcommand": {
                            "sensitive": false,
                            "type": "string",
                            "value": "ssh root@111.22.111.111"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace could not be found. Verify that you entered the correct workspace ID. To find the ID, use the `GET /v1/workspace` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/output_values -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "outputs, detailedResponse, err := schematicsService.GetWorkspaceOutputs(&schematicsv1.GetWorkspaceOutputsOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(outputs, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/templates/values": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Get workspace template details",
        "description": "Retrieve detailed information about the Terraform template that your workspace points to. ",
        "operationId": "get_all_workspace_inputs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve information about the associated Terraform template. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved details about the Terraform template that your workspace points to.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceTemplateValuesResponse"
                },
                "examples": {
                  "response": {
                    "value": {
                      "template_data": [
                        {
                          "id": "1111aa2221-a11a-11",
                          "folder": ".",
                          "type": "terraform_v0.12",
                          "values_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/71111aa2221-a11a-11/values",
                          "values": "",
                          "values_metadata": [
                            {
                              "name": "variable_name1",
                              "type": "string"
                            },
                            {
                              "name": "variable_name2",
                              "type": "string"
                            }
                          ],
                          "variablestore": [
                            {
                              "name": "variable_name1",
                              "secure": false,
                              "value": "variable_value1",
                              "type": "",
                              "description": ""
                            },
                            {
                              "name": "variable_name2",
                              "secure": false,
                              "value": "variable_value2",
                              "type": "",
                              "description": ""
                            }
                          ]
                        }
                      ],
                      "runtime_data": [
                        {
                          "id": "1111aa2221-a11a-11",
                          "engine_name": "terraform",
                          "engine_version": "v0.12.24",
                          "state_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/state_store",
                          "log_store_url": "https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/log_store"
                        }
                      ],
                      "shared_data": {
                        "cluster_id": null,
                        "namespace": null,
                        "region": "",
                        "resource_group_id": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace ID could not be found. Verify that you entered the correct workspace ID. To find the workspace ID, use the `GET /v1/workspaces` API. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/values -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "WorkspaceTemplateDetails, detailedResponse, err := schematicsService.GetAllWorkspaceInputs(&schematicsv1.GetAllWorkspaceInputsOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(WorkspaceTemplateDetails, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/templates/readme": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "Show workspace template readme",
        "description": "Retrieve the `README.md` file of the Terraform of IBM Cloud catalog template that your workspace points to. ",
        "operationId": "get_workspace_readme",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the `README.md` file that is stored in the GitHub or GitLab repository that your workspace points to. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The GitHub or GitLab branch where the `README.md` file is stored, or the commit ID or tag that references the `README.md` file that you want to retrieve. If you do not specify this option, the `README.md` file is retrieved from the master branch by default.",
            "name": "ref",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the `README.md` of the template that your workspace points to.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateReadme"
                },
                "examples": {
                  "response": {
                    "value": {
                      "readme": "&lt;p&gt;This is my readme.&lt;/p&gt;\n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The source URL format is invalid, the source repository is not supported by Schematics, or the source repository API returns an HTTP error.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer`, or `Manager` service access role in IAM for IBM Cloud Schematics.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The `README.md` file could not be retrieved, because an HTTP error was returned by Git.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/readme -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "readme, detailedResponse, err := schematicsService.GetWorkspaceReadme(&schematicsv1.GetWorkspaceReadmeOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(readme, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/template_data/{t_id}/values": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List workspace input variables",
        "description": "Retrieve a list of input variables that are declared in your Terraform or IBM Cloud catalog template. ",
        "operationId": "get_workspace_inputs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the input variables that you declared in your Terraform template. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Terraform template for which you want to retrieve all your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of input variables that are declared in your template.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateValues"
                },
                "examples": {
                  "response": {
                    "value": {
                      "values_metadata": [
                        {
                          "name": "variable_name",
                          "type": "string"
                        }
                      ],
                      "variablestore": [
                        {
                          "name": "variable_name",
                          "secure": false,
                          "value": "variable_value",
                          "type": "",
                          "description": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "inputValues, detailedResponse, err := schematicsService.GetWorkspaceInputs(&schematicsv1.GetWorkspaceInputsOptions{\n",
                      "    WID: <workspace_id>,\n",
                      "    TID: <template_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(inputValues, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "put": {
        "tags": [
          "workspaces"
        ],
        "description": "Update the input variables for the template that your workspace points to.",
        "summary": "Update workspace input variables",
        "operationId": "replace_workspace_inputs",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to update input variables. To find the ID, use the `GET /v1/workspaces` API. ",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Terraform template for which you want to update input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserValues"
              }
            }
          },
          "description": "Input parameter to update workspace input variables.",
          "required": true
        },
        "x-codegen-request-body-name": "workspace",
        "responses": {
          "200": {
            "description": "Successfully updated input variables for the template that your workspace points to.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserValues"
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl --request PUT --url https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values -H \"Authorization: <iam_token>\" -d '{\"env_values\": [{\"env_key\":\"env_value\"}], \"values\" : \"string\", \"variablestore\": [{\"description\": \"<variable_description>\",\"name\": \"<variable_name>\",\"secure\": <true_or_false>,\"use_default\": <true_or_false>,\"type\": \"<variable_datatype>\",\"value\": \"<variable_value>\"}]}'"
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "envVariables := []interface{}{\n",
                      "    map[string]interface{}{\n",
                      "        \"KEY1\": \"VALUE1\",\n",
                      "        \"KEY2\": \"VALUE2\",\n",
                      "    }}\n",
                      "\n",
                      "varStoreToUpdate := []schematicsv1.WorkspaceVariableRequest{\n",
                      "    {\n",
                      "        Name:  core.StringPtr(\"sample_var\"),\n",
                      "        Type:  core.StringPtr(\"string\"),\n",
                      "        Value: core.StringPtr(\"var1_updated\"),\n",
                      "    },\n",
                      "}\n",
                      "\n",
                      "updateInputs, detailedResponse, err := schematicsService.ReplaceWorkspaceInputs(&schematicsv1.ReplaceWorkspaceInputsOptions{\n",
                      "    WID:           ws.ID,\n",
                      "    TID:           ws.TemplateData[0].ID,\n",
                      "    EnvValues:     envVariables,\n",
                      "    Variablestore: varStoreToUpdate,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(updateInputs, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "/v1/workspaces/{w_id}/template_data/{t_id}/values_metadata": {
      "get": {
        "tags": [
          "workspaces"
        ],
        "summary": "List workspace variable metadata",
        "description": "Retrieve the metadata for all the workspace input variables that are declared in the template that your workspace points to.",
        "operationId": "get_workspace_input_metadata",
        "parameters": [
          {
            "description": "The ID of the workspace for which you want to retrieve the metadata of the input variables that are declared in the template. To find the workspace ID, use the `GET /v1/workspaces` API.",
            "name": "w_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Terraform template for which you want to retrieve the metadata of your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.",
            "name": "t_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IAM access token for your IBM Cloud account. To retrieve the token, run `ibmcloud iam oauth-tokens` in the IBM Cloud CLI.",
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the metadata of the input variables for the template that your workspace points to.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateMetadata"
                },
                "examples": {
                  "response": {
                    "value": {
                      "name": "variable_name",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. Verify that you are assigned the `Reader`, `Writer` or `Manager` service access role in IAM for IBM Cloud Schematics. ",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "404": {
            "description": "The specified workspace or template ID could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact IBM Cloud support.",
            "headers": {
              "X-Request-Id": {
                "description": "Unique ID for this request",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIMessagePayload"
                }
              }
            }
          }
        },
        "x-sdk-operations": {
          "request-examples": {
            "curl": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values_metadata -H \"Authorization: <iam_token>\""
                    ]
                  }
                ]
              }
            ],
            "go": [
              {
                "name": "Example request",
                "example": [
                  {
                    "type": "code",
                    "source": [
                      "inputs, detailedResponse, err := schematicsService.GetWorkspaceInputMetadata(&schematicsv1.GetWorkspaceInputMetadataOptions{\n",
                      "    WID: <workspace_id>\n",
                      "    TID: <template_id>,\n",
                      "})\n",
                      "\n",
                      "if err != nil {\n",
                      "    panic(err)\n",
                      "}\n",
                      "\n",
                      "w, err := json.MarshalIndent(inputs, \"\", \"  \")\n",
                      "fmt.Println(string(w))"
                    ]
                  }
                ]
              }
            ]
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIResponseMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message text"
          },
          "message_id": {
            "type": "string",
            "description": "Message Id for translation"
          },
          "request_id": {
            "type": "string",
            "description": "Request Id for request tracking"
          },
          "status_code": {
            "type": "integer",
            "description": "API Response code",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "description": "API response timestamp",
            "format": "date-time"
          }
        },
        "description": "API Error Message"
      },
      "APIMessagePayload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response status message"
          },
          "messageid": {
            "type": "string",
            "description": "Response status message id"
          },
          "requestid": {
            "type": "string",
            "description": "Response request id"
          },
          "statuscode": {
            "type": "integer",
            "description": "Response status code",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "description": "Response time-stamp",
            "format": "date-time"
          }
        },
        "description": "APIMessagePayload -"
      },
      "CatalogRef": {
        "type": "object",
        "properties": {
          "dry_run": {
            "type": "boolean",
            "description": "Dry run"
          },
          "item_icon_url": {
            "type": "string",
            "description": "Catalog item icon url"
          },
          "item_id": {
            "type": "string",
            "description": "Catalog item id"
          },
          "item_name": {
            "type": "string",
            "description": "Catalog item name"
          },
          "item_readme_url": {
            "type": "string",
            "description": "Catalog item readme url"
          },
          "item_url": {
            "type": "string",
            "description": "Catalog item url"
          },
          "launch_url": {
            "type": "string",
            "description": "Catalog item launch url"
          },
          "offering_version": {
            "type": "string",
            "description": "Catalog item offering version"
          }
        },
        "description": "CatalogRef -"
      },
      "EnvVariableRequest": {
        "type": "array",
        "description": "EnvVariableRequest ..",
        "items": {
          "type": "object"
        }
      },
      "EnvVariableResponse": {
        "type": "object",
        "properties": {
          "hidden": {
            "type": "boolean",
            "description": "Env variable is hidden"
          },
          "name": {
            "type": "string",
            "description": "Env variable name"
          },
          "secure": {
            "type": "boolean",
            "description": "Env variable is secure"
          },
          "value": {
            "type": "string",
            "description": "Value for env variable"
          }
        },
        "description": "EnvVariableResponse -"
      },
      "JobStatusType": {
        "type": "object",
        "properties": {
          "failed": {
            "type": "array",
            "description": "List of failed workspace jobs",
            "items": {
              "type": "string"
            }
          },
          "in_progress": {
            "type": "array",
            "description": "List of in_progress workspace jobs",
            "items": {
              "type": "string"
            }
          },
          "success": {
            "type": "array",
            "description": "List of successful workspace jobs",
            "items": {
              "type": "string"
            }
          },
          "last_updated_on": {
            "type": "string",
            "description": "Workspace job status updated at",
            "format": "date-time"
          }
        },
        "description": "JobStatusType -"
      },
      "JobStateData": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "description": "Job Id"
          },
          "job_name": {
            "type": "string",
            "description": "Job name, uniquely derived from the related Action"
          },
          "summary": {
            "type": "array",
            "description": "Job state summary",
            "items": {
              "$ref": "#/components/schemas/JobStateData_summary"
            }
          },
          "format": {
            "type": "string",
            "description": "Format of the State data (eg. tfstate)"
          },
          "details": {
            "type": "string",
            "description": "State data file",
            "format": "byte"
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Workspace Job state-file"
      },
      "LogStoreResponse": {
        "type": "object",
        "properties": {
          "engine_name": {
            "type": "string",
            "description": "Engine name"
          },
          "engine_version": {
            "type": "string",
            "description": "Engine version"
          },
          "id": {
            "type": "string",
            "description": "Engine id"
          },
          "log_store_url": {
            "type": "string",
            "description": "Log store url"
          }
        },
        "description": "LogStoreResponse -"
      },
      "LogStoreResponseList": {
        "type": "object",
        "properties": {
          "runtime_data": {
            "type": "array",
            "description": "Runtime data",
            "items": {
              "$ref": "#/components/schemas/LogStoreResponse"
            }
          }
        },
        "description": "LogStoreResponseList -"
      },
      "LogSummary": {
        "type": "object",
        "properties": {
          "activity_status": {
            "$ref": "#/components/schemas/WorkspaceActivityStatus"
          },
          "detected_template_type": {
            "type": "string",
            "description": "Template detected type"
          },
          "discarded_files": {
            "type": "integer",
            "description": "Numner of discarded files",
            "format": "int64"
          },
          "error": {
            "type": "string",
            "description": "Numner of errors in log"
          },
          "resources_added": {
            "type": "integer",
            "description": "Numner of resources added",
            "format": "int64"
          },
          "resources_destroyed": {
            "type": "integer",
            "description": "Numner of resources destroyed",
            "format": "int64"
          },
          "resources_modified": {
            "type": "integer",
            "description": "Numner of resources modified",
            "format": "int64"
          },
          "scanned_files": {
            "type": "integer",
            "description": "Numner of filed scanned",
            "format": "int64"
          },
          "template_variable_count": {
            "type": "integer",
            "description": "Numner of template variables",
            "format": "int64"
          },
          "time_taken": {
            "type": "number",
            "description": "Time takemn to perform activity",
            "format": "double"
          }
        },
        "description": "LogSummary ..."
      },
      "OutputValues": {
        "type": "array",
        "description": "OutputValues -",
        "items": {
          "$ref": "#/components/schemas/OutputValues_inner"
        }
      },
      "ResourceGroupResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Account id"
          },
          "crn": {
            "type": "string",
            "description": "CRN"
          },
          "default": {
            "type": "boolean",
            "description": "default"
          },
          "name": {
            "type": "string",
            "description": "Resource group name"
          },
          "resource_group_id": {
            "type": "string",
            "description": "Resource group id"
          },
          "state": {
            "type": "string",
            "description": "Resource group state"
          }
        },
        "description": "ResourceGroupResponse -"
      },
      "SharedTargetData": {
        "type": "object",
        "properties": {
          "cluster_created_on": {
            "type": "string",
            "description": "Cluster created on"
          },
          "cluster_id": {
            "type": "string",
            "description": "Cluster id"
          },
          "cluster_name": {
            "type": "string",
            "description": "Cluster name"
          },
          "cluster_type": {
            "type": "string",
            "description": "Cluster type"
          },
          "entitlement_keys": {
            "type": "array",
            "description": "Entitlement keys",
            "items": {
              "type": "object"
            }
          },
          "namespace": {
            "type": "string",
            "description": "Target namespace"
          },
          "region": {
            "type": "string",
            "description": "Target region"
          },
          "resource_group_id": {
            "type": "string",
            "description": "Target resource group id"
          },
          "worker_count": {
            "type": "integer",
            "description": "Cluster worker count",
            "format": "int64"
          },
          "worker_machine_type": {
            "type": "string",
            "description": "Cluster worker type"
          }
        },
        "description": "SharedTargetData -"
      },
      "SharedTargetDataResponse": {
        "type": "object",
        "properties": {
          "cluster_id": {
            "type": "string",
            "description": "Target cluster id"
          },
          "cluster_name": {
            "type": "string",
            "description": "Target cluster name"
          },
          "entitlement_keys": {
            "type": "array",
            "description": "Entitlement keys",
            "items": {
              "type": "object"
            }
          },
          "namespace": {
            "type": "string",
            "description": "Target namespace"
          },
          "region": {
            "type": "string",
            "description": "Target region"
          },
          "resource_group_id": {
            "type": "string",
            "description": "Target resource group id"
          }
        },
        "description": "SharedTargetDataResponse -"
      },
      "SharedDatasetCreateRequest": {
        "type": "object",
        "properties": {
          "auto_propagate_change": {
            "type": "boolean",
            "description": "Automatically propagate changes to consumers"
          },
          "description": {
            "type": "string",
            "description": "Dataset description"
          },
          "effected_workspace_ids": {
            "type": "array",
            "description": "Affected workspaces",
            "items": {
              "type": "string"
            }
          },
          "resource_group": {
            "type": "string",
            "description": "Resource group name"
          },
          "shared_dataset_data": {
            "type": "array",
            "description": "Shared dataset data",
            "items": {
              "$ref": "#/components/schemas/SharedDatasetData"
            }
          },
          "shared_dataset_name": {
            "type": "string",
            "description": "Shared dataset name"
          },
          "shared_dataset_source_name": {
            "type": "string",
            "description": "Shared dataset source name"
          },
          "shared_dataset_type": {
            "type": "array",
            "description": "Shared dataset type",
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "description": "Shared dataset tags",
            "items": {
              "type": "string"
            }
          },
          "version": {
            "type": "string",
            "description": "Shared dataset version"
          }
        },
        "description": "SharedDatasetCreateRequest - request passed in create"
      },
      "SharedDatasetData": {
        "type": "object",
        "properties": {
          "default_value": {
            "type": "string",
            "description": "Default values"
          },
          "description": {
            "type": "string",
            "description": "Data description"
          },
          "hidden": {
            "type": "boolean",
            "description": "Data is hidden"
          },
          "immutable": {
            "type": "boolean",
            "description": "Data is readonly"
          },
          "matches": {
            "type": "string",
            "description": "Data is matches regular expression"
          },
          "max_value": {
            "type": "string",
            "description": "Max value of the data"
          },
          "max_value_len": {
            "type": "string",
            "description": "Max string length of the data"
          },
          "min_value": {
            "type": "string",
            "description": "Min value of the data"
          },
          "min_value_len": {
            "type": "string",
            "description": "Min string length of the data"
          },
          "options": {
            "type": "array",
            "description": "Possible options for the Data",
            "items": {
              "type": "string"
            }
          },
          "override_value": {
            "type": "string",
            "description": "Override value for the Data"
          },
          "secure": {
            "type": "boolean",
            "description": "Data is secure"
          },
          "var_aliases": {
            "type": "array",
            "description": "Alias strings for the variable names",
            "items": {
              "type": "string"
            }
          },
          "var_name": {
            "type": "string",
            "description": "Variable name"
          },
          "var_ref": {
            "type": "string",
            "description": "Variable reference"
          },
          "var_type": {
            "type": "string",
            "description": "Variable type"
          }
        },
        "description": "SharedDatasetData ..."
      },
      "SharedDatasetResponse": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account id"
          },
          "created_at": {
            "type": "string",
            "description": "Dataset created at",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "description": "Dataset created by"
          },
          "description": {
            "type": "string",
            "description": "Dataset description"
          },
          "effected_workspace_ids": {
            "type": "array",
            "description": "Affected workspace id",
            "items": {
              "type": "string"
            }
          },
          "resource_group": {
            "type": "string",
            "description": "Resource group name"
          },
          "shared_dataset_data": {
            "type": "array",
            "description": "Shared dataset data",
            "items": {
              "$ref": "#/components/schemas/SharedDatasetData"
            }
          },
          "shared_dataset_id": {
            "type": "string",
            "description": "Shared dataset id"
          },
          "shared_dataset_name": {
            "type": "string",
            "description": "Shared dataset name"
          },
          "shared_dataset_type": {
            "type": "array",
            "description": "Shared dataset type",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "$ref": "#/components/schemas/SharedDatasetState"
          },
          "tags": {
            "type": "array",
            "description": "Shared dataset tags",
            "items": {
              "type": "string"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "Shared dataset updated at",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "description": "Shared dataset updated by"
          },
          "version": {
            "type": "string",
            "description": "Shared dataset version"
          }
        },
        "description": "SharedDatasetResponse - request returned by create"
      },
      "SharedDatasetResponseList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Shared dataset count",
            "format": "int64"
          },
          "shared_datasets": {
            "type": "array",
            "description": "List of datasets",
            "items": {
              "$ref": "#/components/schemas/SharedDatasetResponse"
            }
          }
        },
        "description": "SharedDatasetResponseList -"
      },
      "SharedDatasetState": {
        "type": "string",
        "description": "shareddata variable status type"
      },
      "StateStoreResponse": {
        "type": "object",
        "properties": {
          "engine_name": {
            "type": "string",
            "description": "Engine name"
          },
          "engine_version": {
            "type": "string",
            "description": "Engine version"
          },
          "id": {
            "type": "string",
            "description": "State store id"
          },
          "state_store_url": {
            "type": "string",
            "description": "State store url"
          }
        },
        "description": "StateStoreResponse -"
      },
      "StateStoreResponseList": {
        "type": "object",
        "properties": {
          "runtime_data": {
            "type": "array",
            "description": "List of state stores",
            "items": {
              "$ref": "#/components/schemas/StateStoreResponse"
            }
          }
        },
        "description": "StateStoreResponseList -"
      },
      "StatusMessages": {
        "type": "array",
        "description": "StatusMessages -",
        "items": {
          "type": "string"
        }
      },
      "SystemLock": {
        "type": "object",
        "properties": {
          "sys_locked": {
            "type": "boolean",
            "description": "Is the Workspace locked by a Schematic action ?"
          },
          "sys_locked_by": {
            "type": "string",
            "description": "Name of the User who performed the action, that lead to the locking of the Workspace"
          },
          "sys_locked_at": {
            "type": "string",
            "description": "When the User performed the action that lead to locking of the Workspace ?  ",
            "format": "date-time"
          }
        },
        "description": "System lock status",
        "readOnly": true
      },
      "Tags": {
        "type": "array",
        "description": "Tags -",
        "items": {
          "type": "string"
        }
      },
      "TemplateData": {
        "type": "array",
        "description": "TemplateData -",
        "items": {
          "$ref": "#/components/schemas/TemplateSourceDataRequest"
        }
      },
      "TemplateLogStoreString": {
        "type": "string",
        "description": "TemplateLogStoreString -"
      },
      "TemplateMetadata": {
        "type": "array",
        "description": "TemplateMetadata -",
        "items": {
          "type": "object",
          "description": "Metadata"
        }
      },
      "TemplateReadme": {
        "type": "object",
        "properties": {
          "readme": {
            "type": "string",
            "description": "Readme string"
          }
        },
        "description": "TemplateReadme -"
      },
      "TemplateTarRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Template tar file",
            "format": "binary"
          }
        },
        "description": "Upload Template tar file"
      },
      "TemplateRepoRequest": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string",
            "description": "Repo branch"
          },
          "release": {
            "type": "string",
            "description": "Repo release"
          },
          "repo_sha_value": {
            "type": "string",
            "description": "Repo SHA value"
          },
          "repo_url": {
            "type": "string",
            "description": "Repo URL"
          },
          "url": {
            "type": "string",
            "description": "Source URL"
          }
        },
        "description": "TemplateRepoRequest -"
      },
      "TemplateRepoResponse": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string",
            "description": "Repo branch"
          },
          "full_url": {
            "type": "string",
            "description": "Full repo URL"
          },
          "has_uploadedgitrepotar": {
            "type": "boolean",
            "description": "Has uploaded git repo tar"
          },
          "release": {
            "type": "string",
            "description": "Repo release"
          },
          "repo_sha_value": {
            "type": "string",
            "description": "Repo SHA value"
          },
          "repo_url": {
            "type": "string",
            "description": "Repo URL"
          },
          "url": {
            "type": "string",
            "description": "Source URL"
          }
        },
        "description": "TemplateRepoResponse -"
      },
      "TemplateRepoTarUploadResponse": {
        "type": "object",
        "properties": {
          "file_value": {
            "type": "string",
            "description": "Tar file value"
          },
          "has_received_file": {
            "type": "boolean",
            "description": "Has received tar file"
          },
          "id": {
            "type": "string",
            "description": "Template id"
          }
        },
        "description": "TemplateRepoTarUploadResponse -"
      },
      "TemplateRepoUpdateRequest": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string",
            "description": "Repo branch"
          },
          "release": {
            "type": "string",
            "description": "Repo release"
          },
          "repo_sha_value": {
            "type": "string",
            "description": "Repo SHA value"
          },
          "repo_url": {
            "type": "string",
            "description": "Repo URL"
          },
          "url": {
            "type": "string",
            "description": "Source URL"
          }
        },
        "description": "TemplateRepoUpdateRequest -"
      },
      "TemplateResource": {
        "type": "array",
        "description": "TemplateResource -",
        "items": {
          "type": "object"
        }
      },
      "TemplateResources": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "description": "Template folder name"
          },
          "id": {
            "type": "string",
            "description": "Template id"
          },
          "null_resources": {
            "type": "array",
            "description": "List of null resources",
            "items": {
              "type": "object"
            }
          },
          "related_resources": {
            "type": "array",
            "description": "List of related resources",
            "items": {
              "type": "object"
            }
          },
          "resources": {
            "type": "array",
            "description": "List of resources",
            "items": {
              "type": "object"
            }
          },
          "resources_count": {
            "type": "integer",
            "description": "Number of resources",
            "format": "int64"
          },
          "template_type": {
            "type": "string",
            "description": "Type of templaes"
          }
        },
        "description": "TemplateResources -"
      },
      "TemplateResourcesList": {
        "type": "array",
        "description": "TemplateResourcesList -",
        "items": {
          "$ref": "#/components/schemas/TemplateResources"
        }
      },
      "TemplateRunTimeDataResponse": {
        "type": "object",
        "properties": {
          "engine_cmd": {
            "type": "string",
            "description": "Engine command"
          },
          "engine_name": {
            "type": "string",
            "description": "Engine name"
          },
          "engine_version": {
            "type": "string",
            "description": "Engine version"
          },
          "id": {
            "type": "string",
            "description": "Template id"
          },
          "log_store_url": {
            "type": "string",
            "description": "Log store url"
          },
          "output_values": {
            "type": "array",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of Output values",
            "items": {
              "type": "object"
            }
          },
          "resources": {
            "type": "array",
            "description": "List of resources",
            "items": {
              "$ref": "#/components/schemas/TemplateResource"
            }
          },
          "state_store_url": {
            "type": "string",
            "description": "State store URL"
          }
        },
        "description": "TemplateRunTimeDataResponse -"
      },
      "TemplateSourceDataRequest": {
        "type": "object",
        "properties": {
          "env_values": {
            "$ref": "#/components/schemas/EnvVariableRequest"
          },
          "folder": {
            "type": "string",
            "description": "Folder name"
          },
          "init_state_file": {
            "type": "string",
            "description": "Init state file"
          },
          "type": {
            "type": "string",
            "description": "Template type"
          },
          "uninstall_script_name": {
            "type": "string",
            "description": "Uninstall script name"
          },
          "values": {
            "type": "string",
            "description": "Value"
          },
          "values_metadata": {
            "type": "array",
            "description": "List of values metadata",
            "items": {
              "type": "object"
            }
          },
          "variablestore": {
            "$ref": "#/components/schemas/VariablesRequest"
          }
        },
        "description": "TemplateSourceDataRequest -"
      },
      "TemplateSourceDataResponse": {
        "type": "object",
        "properties": {
          "env_values": {
            "type": "array",
            "description": "List of environment values",
            "items": {
              "$ref": "#/components/schemas/EnvVariableResponse"
            }
          },
          "folder": {
            "type": "string",
            "description": "Folder name"
          },
          "has_githubtoken": {
            "type": "boolean",
            "description": "Has github token"
          },
          "id": {
            "type": "string",
            "description": "Template id"
          },
          "template_type": {
            "type": "string",
            "description": "Template tyoe"
          },
          "uninstall_script_name": {
            "type": "string",
            "description": "Uninstall script name"
          },
          "values": {
            "type": "string",
            "description": "Values"
          },
          "values_metadata": {
            "type": "array",
            "description": "List of values metadata",
            "items": {
              "type": "object"
            }
          },
          "values_url": {
            "type": "string",
            "description": "Values URL"
          },
          "variablestore": {
            "$ref": "#/components/schemas/VariablesResponse"
          }
        },
        "description": "TemplateSourceDataResponse -"
      },
      "TemplateStateStore": {
        "type": "object",
        "properties": {
          "version": {
            "type": "number"
          },
          "terraform_version": {
            "type": "string"
          },
          "serial": {
            "type": "number"
          },
          "lineage": {
            "type": "string"
          },
          "modules": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "description": "TemplateStateStore -"
      },
      "TemplateValues": {
        "type": "object",
        "properties": {
          "values_metadata": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "description": "TemplateValues -"
      },
      "UserValues": {
        "type": "object",
        "properties": {
          "env_values": {
            "$ref": "#/components/schemas/EnvVariableRequest"
          },
          "values": {
            "type": "string",
            "description": "User values"
          },
          "variablestore": {
            "$ref": "#/components/schemas/VariablesResponse"
          }
        },
        "description": "UserValues -"
      },
      "UserValuesRequest": {
        "type": "object",
        "properties": {
          "env_values": {
            "$ref": "#/components/schemas/EnvVariableRequest"
          },
          "values": {
            "type": "string",
            "description": "User values"
          },
          "variablestore": {
            "$ref": "#/components/schemas/VariablesRequest"
          }
        },
        "description": "UserValuesRequest -"
      },
      "VariablesRequest": {
        "type": "array",
        "description": "VariablesRequest -",
        "items": {
          "$ref": "#/components/schemas/WorkspaceVariableRequest"
        }
      },
      "VariablesResponse": {
        "type": "array",
        "description": "VariablesResponse -",
        "items": {
          "$ref": "#/components/schemas/WorkspaceVariableResponse"
        }
      },
      "VersionResponse": {
        "type": "object",
        "properties": {
          "builddate": {
            "type": "string",
            "description": "Build data"
          },
          "buildno": {
            "type": "string",
            "description": "Build number"
          },
          "commitsha": {
            "type": "string",
            "description": "Commit SHA"
          },
          "helm_provider_version": {
            "type": "string",
            "description": "Version number of 'Helm provider for Terraform'"
          },
          "helm_version": {
            "type": "string",
            "description": "Helm Version"
          },
          "supported_template_types": {
            "type": "array",
            "description": "Supported template types",
            "items": {
              "type": "object"
            }
          },
          "terraform_provider_version": {
            "type": "string",
            "description": "Terraform provider versions"
          },
          "terraform_version": {
            "type": "string",
            "description": "Terraform versions"
          }
        },
        "description": "VersionResponse -"
      },
      "WorkspaceActivityOptions": {
        "type": "object",
        "properties": {
          "action_options": {
            "$ref": "#/components/schemas/WorkspaceActivityOptionsTemplate"
          }
        },
        "description": "Action Options"
      },
      "WorkspaceActivityOptionsTemplate": {
        "type": "object",
        "properties": {
          "target": {
            "type": "array",
            "description": "Action targets",
            "items": {
              "type": "string"
            }
          },
          "tf_vars": {
            "type": "array",
            "description": "Action tfvars",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Action Options Template ..."
      },
      "WorkspaceActivityAction": {
        "type": "string",
        "description": "WorkspaceActivityAction activity action type"
      },
      "WorkspaceActivityStatus": {
        "type": "string",
        "description": "WorkspaceActivityStatus activity status type"
      },
      "WorkspaceActivityApplyResult": {
        "type": "object",
        "properties": {
          "activityid": {
            "type": "string",
            "description": "Activity id"
          }
        },
        "description": "WorkspaceActivityApplyResult -"
      },
      "WorkspaceActivityDestroyResult": {
        "type": "object",
        "properties": {
          "activityid": {
            "type": "string",
            "description": "Activity id"
          }
        },
        "description": "WorkspaceActivityDestroyResult -"
      },
      "WorkspaceActivityPlanResult": {
        "type": "object",
        "properties": {
          "activityid": {
            "type": "string",
            "description": "Activity id"
          }
        },
        "description": "WorkspaceActivityPlanResult -"
      },
      "WorkspaceActivityRefreshResult": {
        "type": "object",
        "properties": {
          "activityid": {
            "type": "string",
            "description": "Activity id"
          }
        },
        "description": "WorkspaceActivityRefreshResult -"
      },
      "WorkspaceActivity": {
        "type": "object",
        "properties": {
          "action_id": {
            "type": "string",
            "description": "Activity id"
          },
          "message": {
            "$ref": "#/components/schemas/StatusMessages"
          },
          "name": {
            "$ref": "#/components/schemas/WorkspaceActivityAction"
          },
          "performed_at": {
            "type": "string",
            "description": "Activity performed at",
            "format": "date-time"
          },
          "performed_by": {
            "type": "string",
            "description": "Activity performed by"
          },
          "status": {
            "$ref": "#/components/schemas/WorkspaceActivityStatus"
          },
          "templates": {
            "type": "array",
            "description": "List of template activities",
            "items": {
              "$ref": "#/components/schemas/WorkspaceActivityTemplate"
            }
          }
        },
        "description": "WorkspaceActivity -"
      },
      "WorkspaceActivityLogs": {
        "type": "object",
        "properties": {
          "action_id": {
            "type": "string",
            "description": "Activity id"
          },
          "name": {
            "$ref": "#/components/schemas/WorkspaceActivityAction"
          },
          "templates": {
            "type": "array",
            "description": "List of activity logs",
            "items": {
              "$ref": "#/components/schemas/WorkspaceActivityTemplateLogs"
            }
          }
        },
        "description": "WorkspaceActivityLogs -"
      },
      "WorkspaceActivityTemplate": {
        "type": "object",
        "properties": {
          "end_time": {
            "type": "string",
            "description": "End time for the activity",
            "format": "date-time"
          },
          "log_summary": {
            "$ref": "#/components/schemas/LogSummary"
          },
          "log_url": {
            "type": "string",
            "description": "Log URL"
          },
          "message": {
            "type": "string",
            "description": "Message"
          },
          "start_time": {
            "type": "string",
            "description": "Activity start time",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/WorkspaceActivityStatus"
          },
          "template_id": {
            "type": "string",
            "description": "Template id"
          },
          "template_type": {
            "type": "string",
            "description": "Template type"
          }
        },
        "description": "WorkspaceActivityTemplate -"
      },
      "WorkspaceActivityTemplateLogString": {
        "type": "string",
        "description": "WorkspaceActivityTemplateLogString -"
      },
      "WorkspaceActivityTemplateLogs": {
        "type": "object",
        "properties": {
          "log_url": {
            "type": "string",
            "description": "Log URL"
          },
          "template_id": {
            "type": "string",
            "description": "Template id"
          },
          "template_type": {
            "type": "string",
            "description": "Template type"
          }
        },
        "description": "WorkspaceActivityTemplateLogs -"
      },
      "WorkspaceActivities": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "List of workspace activities",
            "items": {
              "$ref": "#/components/schemas/WorkspaceActivity"
            }
          },
          "workspace_id": {
            "type": "string",
            "description": "Workspace id"
          },
          "workspace_name": {
            "type": "string",
            "description": "Workspace name"
          }
        },
        "description": "WorkspaceActivities -"
      },
      "WorkspaceBulkDeleteRequest": {
        "type": "object",
        "properties": {
          "delete_workspaces": {
            "type": "boolean",
            "description": "True to delete workspace"
          },
          "destroy_resources": {
            "type": "boolean",
            "description": "True to destroy the resources managed by this workspace"
          },
          "job": {
            "type": "string",
            "description": "Workspace deletion job name"
          },
          "version": {
            "type": "string",
            "description": "Version"
          },
          "workspaces": {
            "type": "array",
            "description": "List of workspaces to be deleted",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "WorkspaceBulkDeleteRequest -"
      },
      "WorkspaceBulkDeleteResponse": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Workspace deletion job name"
          },
          "job_id": {
            "type": "string",
            "description": "Workspace deletion job id"
          }
        },
        "description": "WorkspaceBulkDeleteResponse -"
      },
      "WorkspaceDeleteResponse": {
        "type": "string",
        "description": "WorkspaceDeleteResponse -"
      },
      "WorkspaceCreateRequest": {
        "type": "object",
        "properties": {
          "applied_shareddata_ids": {
            "type": "array",
            "description": "List of applied shared dataset id",
            "items": {
              "type": "string"
            }
          },
          "catalog_ref": {
            "$ref": "#/components/schemas/CatalogRef"
          },
          "description": {
            "type": "string",
            "description": "Workspace description"
          },
          "location": {
            "type": "string",
            "description": "Workspace location"
          },
          "name": {
            "type": "string",
            "description": "Workspace name"
          },
          "resource_group": {
            "type": "string",
            "description": "Workspace resource group"
          },
          "shared_data": {
            "$ref": "#/components/schemas/SharedTargetData"
          },
          "tags": {
            "type": "array",
            "description": "Workspace tags",
            "items": {
              "type": "string"
            }
          },
          "template_data": {
            "$ref": "#/components/schemas/TemplateData"
          },
          "template_ref": {
            "type": "string",
            "description": "Workspace template ref"
          },
          "template_repo": {
            "$ref": "#/components/schemas/TemplateRepoRequest"
          },
          "type": {
            "type": "array",
            "description": "List of Workspace type",
            "items": {
              "type": "string"
            }
          },
          "workspace_status": {
            "$ref": "#/components/schemas/WorkspaceStatusRequest"
          }
        },
        "description": "WorkspaceCreateRequest - request passed in create"
      },
      "WorkspaceJobResponse": {
        "type": "object",
        "properties": {
          "job_status": {
            "$ref": "#/components/schemas/JobStatusType"
          }
        },
        "description": "WorkspaceJobResponse -"
      },
      "WorkspaceResponse": {
        "type": "object",
        "properties": {
          "applied_shareddata_ids": {
            "type": "array",
            "description": "List of applied shared dataset id",
            "items": {
              "type": "string"
            }
          },
          "catalog_ref": {
            "$ref": "#/components/schemas/CatalogRef"
          },
          "created_at": {
            "type": "string",
            "description": "Workspace created at",
            "format": "date-time"
          },
          "created_by": {
            "type": "string",
            "description": "Workspace created by"
          },
          "crn": {
            "type": "string",
            "description": "Workspace CRN"
          },
          "description": {
            "type": "string",
            "description": "Workspace description"
          },
          "id": {
            "type": "string",
            "description": "Workspace id"
          },
          "last_health_check_at": {
            "type": "string",
            "description": "Last health checked at",
            "format": "date-time"
          },
          "location": {
            "type": "string",
            "description": "Workspace location"
          },
          "name": {
            "type": "string",
            "description": "Workspace name"
          },
          "resource_group": {
            "type": "string",
            "description": "Workspace resource group"
          },
          "runtime_data": {
            "type": "array",
            "description": "Workspace runtime data",
            "items": {
              "$ref": "#/components/schemas/TemplateRunTimeDataResponse"
            }
          },
          "shared_data": {
            "$ref": "#/components/schemas/SharedTargetDataResponse"
          },
          "status": {
            "$ref": "#/components/schemas/WorkspaceStatus"
          },
          "tags": {
            "type": "array",
            "description": "Workspace tags",
            "items": {
              "type": "string"
            }
          },
          "template_data": {
            "type": "array",
            "description": "Workspace template data",
            "items": {
              "$ref": "#/components/schemas/TemplateSourceDataResponse"
            }
          },
          "template_ref": {
            "type": "string",
            "description": "Workspace template ref"
          },
          "template_repo": {
            "$ref": "#/components/schemas/TemplateRepoResponse"
          },
          "type": {
            "type": "array",
            "description": "List of Workspace type",
            "items": {
              "type": "string"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "Workspace updated at",
            "format": "date-time"
          },
          "updated_by": {
            "type": "string",
            "description": "Workspace updated by"
          },
          "workspace_status": {
            "$ref": "#/components/schemas/WorkspaceStatusResponse"
          },
          "workspace_status_msg": {
            "$ref": "#/components/schemas/WorkspaceStatusMessage"
          }
        },
        "description": "WorkspaceResponse - request returned by create"
      },
      "WorkspaceResponseList": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Total number of workspaces",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "Limit for the list",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "Offset for the list",
            "format": "int64"
          },
          "workspaces": {
            "type": "array",
            "description": "List of Workspaces",
            "items": {
              "$ref": "#/components/schemas/WorkspaceResponse"
            }
          }
        },
        "description": "WorkspaceResponseList -"
      },
      "WorkspaceStatus": {
        "type": "string",
        "description": "Workspace status type"
      },
      "WorkspaceStatusMessage": {
        "type": "object",
        "properties": {
          "status_code": {
            "type": "string",
            "description": "Status code"
          },
          "status_msg": {
            "type": "string",
            "description": "Status message"
          }
        },
        "description": "WorkspaceStatusMessage -"
      },
      "WorkspaceStatusRequest": {
        "type": "object",
        "properties": {
          "frozen": {
            "type": "boolean",
            "description": "Frozen status"
          },
          "frozen_at": {
            "type": "string",
            "description": "Frozen at",
            "format": "date-time"
          },
          "frozen_by": {
            "type": "string",
            "description": "Frozen by"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked status"
          },
          "locked_by": {
            "type": "string",
            "description": "Locked by"
          },
          "locked_time": {
            "type": "string",
            "description": "Locked at",
            "format": "date-time"
          }
        },
        "description": "WorkspaceStatusRequest -"
      },
      "WorkspaceStatusResponse": {
        "type": "object",
        "properties": {
          "frozen": {
            "type": "boolean",
            "description": "Frozen status"
          },
          "frozen_at": {
            "type": "string",
            "description": "Frozen at",
            "format": "date-time"
          },
          "frozen_by": {
            "type": "string",
            "description": "Frozen by"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked status"
          },
          "locked_by": {
            "type": "string",
            "description": "Locked by"
          },
          "locked_time": {
            "type": "string",
            "description": "Locked at",
            "format": "date-time"
          }
        },
        "description": "WorkspaceStatusResponse -"
      },
      "WorkspaceStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "frozen": {
            "type": "boolean",
            "description": "Frozen status"
          },
          "frozen_at": {
            "type": "string",
            "description": "Frozen at",
            "format": "date-time"
          },
          "frozen_by": {
            "type": "string",
            "description": "Frozen by"
          },
          "locked": {
            "type": "boolean",
            "description": "Locked status"
          },
          "locked_by": {
            "type": "string",
            "description": "Locked by"
          },
          "locked_time": {
            "type": "string",
            "description": "Locked at",
            "format": "date-time"
          }
        },
        "description": "WorkspaceStatusUpdateRequest -"
      },
      "WorkspaceTemplateValuesResponse": {
        "type": "object",
        "properties": {
          "runtime_data": {
            "type": "array",
            "description": "List of runtime data",
            "items": {
              "$ref": "#/components/schemas/TemplateRunTimeDataResponse"
            }
          },
          "shared_data": {
            "$ref": "#/components/schemas/SharedTargetData"
          },
          "template_data": {
            "type": "array",
            "description": "List of source data",
            "items": {
              "$ref": "#/components/schemas/TemplateSourceDataResponse"
            }
          }
        },
        "description": "WorkspaceTemplateValuesResponse -"
      },
      "WorkspaceUpdateRequest": {
        "type": "object",
        "properties": {
          "catalog_ref": {
            "$ref": "#/components/schemas/CatalogRef"
          },
          "description": {
            "type": "string",
            "description": "Workspace description"
          },
          "name": {
            "type": "string",
            "description": "Workspace name"
          },
          "shared_data": {
            "$ref": "#/components/schemas/SharedTargetData"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          },
          "template_data": {
            "$ref": "#/components/schemas/TemplateData"
          },
          "template_repo": {
            "$ref": "#/components/schemas/TemplateRepoUpdateRequest"
          },
          "type": {
            "type": "array",
            "description": "List of Workspace type",
            "items": {
              "type": "string"
            }
          },
          "workspace_status": {
            "$ref": "#/components/schemas/WorkspaceStatusUpdateRequest"
          },
          "workspace_status_msg": {
            "$ref": "#/components/schemas/WorkspaceStatusMessage"
          }
        },
        "description": "WorkspaceUpdateRequest - request passed in create"
      },
      "WorkspaceVariableRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Variable description"
          },
          "name": {
            "type": "string",
            "description": "Variable name"
          },
          "secure": {
            "type": "boolean",
            "description": "Variable is secure"
          },
          "type": {
            "type": "string",
            "description": "Variable type"
          },
          "use_default": {
            "type": "boolean",
            "description": "Variable uses default value; and is not over-ridden."
          },
          "value": {
            "type": "string",
            "description": "Value of the Variable"
          }
        },
        "description": "WorkspaceVariableRequest -"
      },
      "WorkspaceVariableResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Variable descrption"
          },
          "name": {
            "type": "string",
            "description": "Variable name"
          },
          "secure": {
            "type": "boolean",
            "description": "Variable is secure"
          },
          "type": {
            "type": "string",
            "description": "Variable type"
          },
          "value": {
            "type": "string",
            "description": "Value of the Variable"
          }
        },
        "description": "WorkspaceVariableResponse -"
      },
      "SchematicsLocations": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Country"
          },
          "geography": {
            "type": "string",
            "description": "Geography"
          },
          "id": {
            "type": "string",
            "description": "Location id"
          },
          "kind": {
            "type": "string",
            "description": "Kind"
          },
          "metro": {
            "type": "string",
            "description": "Metro"
          },
          "multizone_metro": {
            "type": "string",
            "description": "Multizone metro"
          },
          "name": {
            "type": "string",
            "description": "Location name"
          }
        },
        "description": "Schematics locations"
      },
      "SchematicsResourceEnum": {
        "type": "string",
        "description": "Name of the Schematics automation resource",
        "enum": [
          "workspace",
          "action"
        ]
      },
      "CommandEnum": {
        "type": "string",
        "description": "Schematics job command name",
        "enum": [
          "workspace_init_flow",
          "workspace_plan_flow",
          "workspace_apply_flow",
          "workspace_destroy_flow",
          "workspace_refresh_flow",
          "workspace_show_flow",
          "workspace_custom_flow",
          "terraform_init",
          "terrform_plan",
          "terrform_apply",
          "terrform_destroy",
          "terrform_refresh",
          "terrform_taint",
          "terrform_show",
          "helm_install",
          "helm_list",
          "helm_show",
          "ansible_playbook_run",
          "ansible_playbook_check",
          "opa_evaluate"
        ]
      },
      "LocationEnum": {
        "type": "string",
        "description": "List of workspace locations supported by IBM Cloud Schematics service.  Note, this does not limit the location of the resources provisioned using Schematics.",
        "enum": [
          "us_south",
          "us_east",
          "eu_gb",
          "eu_de"
        ]
      },
      "UserState": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/UserStateEnum"
          },
          "set_by": {
            "type": "string",
            "description": "Name of the User who set the state of the Object"
          },
          "set_at": {
            "type": "string",
            "description": "When the User who set the state of the Object",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "User defined status of the Schematics object"
      },
      "UserStateEnum": {
        "type": "string",
        "description": "User-defined states\n  * `draft` Object can be modified; can be used by Jobs run by the author, during execution\n  * `live` Object can be modified; can be used by Jobs during execution\n  * `locked` Object cannot be modified; can be used by Jobs during execution\n  * `disable` Object can be modified. cannot be used by Jobs during execution",
        "enum": [
          "draft",
          "live",
          "locked",
          "disable"
        ]
      },
      "VariableData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the variable"
          },
          "value": {
            "type": "string",
            "description": "Value for the variable or reference to the value"
          },
          "metadata": {
            "$ref": "#/components/schemas/VariableMetadata"
          },
          "link": {
            "type": "string",
            "description": "Reference link to the variable value By default the expression will point to self.value ",
            "readOnly": true
          }
        },
        "description": "User editable variable data & system generated reference to value"
      },
      "VariableMetadata": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the variable. ",
            "enum": [
              "boolean",
              "string",
              "integer",
              "date",
              "array",
              "list",
              "map",
              "complex"
            ]
          },
          "aliases": {
            "type": "array",
            "description": "List of aliases for the variable name",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the meta data"
          },
          "default_value": {
            "type": "string",
            "description": "Default value for the variable, if the override value is not specified"
          },
          "secure": {
            "type": "boolean",
            "description": "Is the variable secure or sensitive ?"
          },
          "immutable": {
            "type": "boolean",
            "description": "Is the variable readonly ?"
          },
          "hidden": {
            "type": "boolean",
            "description": "If true, the variable will not be displayed on UI or CLI."
          },
          "options": {
            "type": "array",
            "description": "List of possible values for this variable.  If type is integer or date, then the array of string will be  converted to array of integers or date during runtime ",
            "items": {
              "type": "string"
            }
          },
          "min_value": {
            "type": "integer",
            "description": "Minimum value of the variable. Applicable for integer type"
          },
          "max_value": {
            "type": "integer",
            "description": "Maximum value of the variable. Applicable for integer type"
          },
          "min_length": {
            "type": "integer",
            "description": "Minimum length of the variable value. Applicable for string type."
          },
          "max_length": {
            "type": "integer",
            "description": "Maximum length of the variable value. Applicable for string type."
          },
          "matches": {
            "type": "string",
            "description": "Regex for the variable value"
          },
          "position": {
            "type": "integer",
            "description": "Relative position of this variable in a list"
          },
          "group_by": {
            "type": "string",
            "description": "Display name of the group this variable belongs to"
          },
          "source": {
            "type": "string",
            "description": "Source of this meta-data.        "
          }
        },
        "description": "User editable metadata for the variables"
      },
      "ExternalSource": {
        "required": [
          "source_type"
        ],
        "type": "object",
        "properties": {
          "source_type": {
            "$ref": "#/components/schemas/ExternalSourceEnum"
          },
          "git": {
            "$ref": "#/components/schemas/ExternalSource_git"
          }
        },
        "description": "Source of templates, playbooks, or controls"
      },
      "ExternalSourceEnum": {
        "type": "string",
        "description": "Type of source for the Template",
        "enum": [
          "local",
          "git_hub",
          "git_hub_enterprise",
          "git_lab",
          "ibm_git_lab",
          "ibm_cloud_catalog",
          "external_scm"
        ]
      },
      "AutomationStatusEnum": {
        "type": "string",
        "description": "Status of automation (workspace or action)",
        "enum": [
          "normal",
          "pending",
          "disabled",
          "critical"
        ]
      },
      "ActionList": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "Number of records returned",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "Skipped number of records",
            "format": "int64"
          },
          "actions": {
            "type": "array",
            "description": "List of action records",
            "items": {
              "$ref": "#/components/schemas/ActionLite"
            }
          }
        },
        "description": "List of Action definition response"
      },
      "Action": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Action name (unique for an account)",
            "example": "Stop Action"
          },
          "description": {
            "type": "string",
            "description": "Action description",
            "example": "This Action can be used to Stop the targets"
          },
          "location": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource-group name for the Action.  By default, Action will be created in Default Resource Group"
          },
          "tags": {
            "type": "array",
            "description": "Action tags",
            "items": {
              "type": "string"
            }
          },
          "user_state": {
            "$ref": "#/components/schemas/UserState"
          },
          "source_readme_url": {
            "type": "string",
            "description": "URL of the README file, for the source"
          },
          "source": {
            "$ref": "#/components/schemas/ExternalSource"
          },
          "source_type": {
            "$ref": "#/components/schemas/ExternalSourceEnum"
          },
          "command_parameter": {
            "type": "string",
            "description": "Schematics job command parameter (playbook-name, capsule-name or flow-name)"
          },
          "bastion": {
            "$ref": "#/components/schemas/TargetResourceset"
          },
          "targets": {
            "type": "array",
            "description": "Action targets",
            "items": {
              "$ref": "#/components/schemas/TargetResourceset"
            }
          },
          "inputs": {
            "type": "array",
            "description": "Input variables for the Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "outputs": {
            "type": "array",
            "description": "Output variables for the Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "settings": {
            "type": "array",
            "description": "Environment variables for the Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "trigger_record_id": {
            "type": "string",
            "description": "Id to the Trigger"
          },
          "id": {
            "type": "string",
            "description": "Action Id",
            "readOnly": true
          },
          "crn": {
            "type": "string",
            "description": "Action Cloud Resource Name",
            "readOnly": true
          },
          "account": {
            "type": "string",
            "description": "Action account id",
            "readOnly": true
          },
          "source_created_at": {
            "type": "string",
            "description": "Action Playbook Source creation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "source_created_by": {
            "type": "string",
            "description": "Email address of user who created the Action Playbook Source",
            "readOnly": true
          },
          "source_updated_at": {
            "type": "string",
            "description": "Action Playbook updation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "source_updated_by": {
            "type": "string",
            "description": "Email address of user who updated the Action Playbook Source",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "description": "Action creation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "created_by": {
            "type": "string",
            "description": "Email address of user who created the action",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Action updation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "updated_by": {
            "type": "string",
            "description": "Email address of user who updated the action",
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "description": "name of the namespace",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/Action_state"
          },
          "playbook_names": {
            "type": "array",
            "description": "Playbook names retrieved from repo",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "sys_lock": {
            "$ref": "#/components/schemas/SystemLock"
          }
        },
        "description": "Complete Action details with user inputs and system generated data"
      },
      "ActionLite": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Action name (unique for an account)",
            "example": "Stop Action"
          },
          "description": {
            "type": "string",
            "description": "Action description",
            "example": "This Action can be used to Stop the targets"
          },
          "id": {
            "type": "string",
            "description": "Action Id"
          },
          "crn": {
            "type": "string",
            "description": "Action Cloud Resource Name"
          },
          "location": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource-group name for the Action.  By default, Action will be created in Default Resource Group"
          },
          "namespace": {
            "type": "string",
            "description": "name of the namespace"
          },
          "tags": {
            "type": "array",
            "description": "Action tags",
            "items": {
              "type": "string"
            }
          },
          "playbook_name": {
            "type": "string",
            "description": "Name of the selected playbook"
          },
          "user_state": {
            "$ref": "#/components/schemas/UserState"
          },
          "state": {
            "$ref": "#/components/schemas/Action_state"
          },
          "sys_lock": {
            "$ref": "#/components/schemas/SystemLock"
          },
          "created_at": {
            "type": "string",
            "description": "Action creation time",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          },
          "created_by": {
            "type": "string",
            "description": "Email address of user who created the action"
          },
          "updated_at": {
            "type": "string",
            "description": "Action updation time",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          },
          "updated_by": {
            "type": "string",
            "description": "Email address of user who updated the action"
          }
        },
        "description": "Action summary profile with user inputs and system generated data"
      },
      "JobList": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "Number of records returned",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "Skipped number of records",
            "format": "int64"
          },
          "jobs": {
            "type": "array",
            "description": "List of job records",
            "items": {
              "$ref": "#/components/schemas/JobLite"
            }
          }
        },
        "description": "List of Job details"
      },
      "Job": {
        "type": "object",
        "properties": {
          "command_object": {
            "$ref": "#/components/schemas/SchematicsResourceEnum"
          },
          "command_object_id": {
            "type": "string",
            "description": "Job command object id (workspace-id, action-id or control-id)"
          },
          "command_name": {
            "$ref": "#/components/schemas/CommandEnum"
          },
          "command_parameter": {
            "type": "string",
            "description": "Schematics job command parameter (playbook-name, capsule-name or flow-name)"
          },
          "command_options": {
            "type": "array",
            "description": "Command line options for the command",
            "items": {
              "type": "string"
            }
          },
          "inputs": {
            "type": "array",
            "description": "Job inputs used by Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "settings": {
            "type": "array",
            "description": "Environment variables used by the Job while performing Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "tags": {
            "type": "array",
            "description": "User defined tags, while running the job",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string",
            "description": "Job ID",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Job name, uniquely derived from the related Action",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Job description derived from the related Action",
            "readOnly": true
          },
          "location": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource-group name derived from the related Action",
            "readOnly": true
          },
          "submitted_at": {
            "type": "string",
            "description": "Job submission time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "submitted_by": {
            "type": "string",
            "description": "Email address of user who submitted the job",
            "readOnly": true
          },
          "start_at": {
            "type": "string",
            "description": "Job start time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "end_at": {
            "type": "string",
            "description": "Job end time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "duration": {
            "type": "string",
            "description": "Duration of job execution; example 40 sec",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "data": {
            "$ref": "#/components/schemas/JobData"
          },
          "targets": {
            "type": "array",
            "description": "Job targets",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/TargetResourceset"
            }
          },
          "bastion": {
            "$ref": "#/components/schemas/TargetResourceset"
          },
          "log_summary": {
            "$ref": "#/components/schemas/JobLogSummary"
          },
          "log_store_url": {
            "type": "string",
            "description": "Job log store URL",
            "readOnly": true
          },
          "state_store_url": {
            "type": "string",
            "description": "Job state store URL",
            "readOnly": true
          },
          "results_url": {
            "type": "string",
            "description": "Job results store URL",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Complete Job with user inputs and system generated data"
      },
      "JobLite": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Job ID"
          },
          "name": {
            "type": "string",
            "description": "Job name, uniquely derived from the related Action"
          },
          "description": {
            "type": "string",
            "description": "Job description derived from the related Action"
          },
          "command_object": {
            "$ref": "#/components/schemas/SchematicsResourceEnum"
          },
          "command_object_id": {
            "type": "string",
            "description": "Job command object id (action-id)"
          },
          "command_name": {
            "$ref": "#/components/schemas/CommandEnum"
          },
          "tags": {
            "type": "array",
            "description": "User defined tags, while running the job",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "$ref": "#/components/schemas/LocationEnum"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource-group name derived from the related Action, "
          },
          "targets": {
            "type": "array",
            "description": "Job targets",
            "items": {
              "$ref": "#/components/schemas/TargetResourceset"
            }
          },
          "submitted_at": {
            "type": "string",
            "description": "Job submission time",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          },
          "submitted_by": {
            "type": "string",
            "description": "Email address of user who submitted the job"
          },
          "duration": {
            "type": "string",
            "description": "Duration of job execution; example 40 sec"
          },
          "start_at": {
            "type": "string",
            "description": "Job start time",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          },
          "end_at": {
            "type": "string",
            "description": "Job end time",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          },
          "status": {
            "$ref": "#/components/schemas/JobStatus"
          },
          "log_summary": {
            "$ref": "#/components/schemas/JobLogSummary"
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Job summary profile with system generated data"
      },
      "JobData": {
        "required": [
          "job_type"
        ],
        "type": "object",
        "properties": {
          "job_type": {
            "type": "string",
            "description": "Type of Job",
            "enum": [
              "repo_download_job",
              "action_job"
            ]
          },
          "action_job_data": {
            "$ref": "#/components/schemas/JobDataAction"
          }
        },
        "description": "Job data"
      },
      "JobDataAction": {
        "type": "object",
        "properties": {
          "action_name": {
            "type": "string",
            "description": "Flow name"
          },
          "inputs": {
            "type": "array",
            "description": "Input variables data used by the Action Job",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "outputs": {
            "type": "array",
            "description": "Output variables data from the Action Job",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "settings": {
            "type": "array",
            "description": "Environment variables used by all the templates in the Action",
            "items": {
              "$ref": "#/components/schemas/VariableData"
            }
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Action Job data"
      },
      "JobLog": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "description": "Job Id"
          },
          "job_name": {
            "type": "string",
            "description": "Job name, uniquely derived from the related Action"
          },
          "log_summary": {
            "$ref": "#/components/schemas/JobLogSummary"
          },
          "format": {
            "type": "string",
            "description": "Format of the Log text",
            "enum": [
              "json",
              "html",
              "markdown",
              "rtf"
            ]
          },
          "details": {
            "type": "string",
            "description": "Log text, generated by the Job",
            "format": "byte"
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Job Log details"
      },
      "JobLogSummary": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "description": "Workspace Id",
            "readOnly": true
          },
          "job_type": {
            "type": "string",
            "description": "Type of Job",
            "enum": [
              "repo_download_job",
              "workspace_job",
              "action_job",
              "controls_job",
              "capsule_job"
            ]
          },
          "log_start_at": {
            "type": "string",
            "description": "Job log start timestamp",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "log_analyzed_till": {
            "type": "string",
            "description": "Job log update timestamp",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "elapsed_time": {
            "type": "number",
            "description": "Job log elapsed time (log_analyzed_till - log_start_at)",
            "readOnly": true
          },
          "log_errors": {
            "type": "array",
            "description": "Job log errors",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/JobLogSummary_log_errors"
            }
          },
          "repo_download_job": {
            "$ref": "#/components/schemas/JobLogSummary_repo_download_job"
          },
          "action_job": {
            "$ref": "#/components/schemas/JobLogSummary_action_job"
          }
        },
        "description": "Job log summary record"
      },
      "JobStatusEnum": {
        "type": "string",
        "description": "Status of Jobs",
        "enum": [
          "job_pending",
          "job_in_progress",
          "iob_finished",
          "job_failed",
          "job_cancelled"
        ]
      },
      "ResourceStatusEnum": {
        "type": "string",
        "description": "Status of Resources",
        "enum": [
          "none",
          "ready",
          "processing",
          "error"
        ]
      },
      "JobStatus": {
        "type": "object",
        "properties": {
          "action_job_status": {
            "$ref": "#/components/schemas/JobStatusAction"
          }
        },
        "description": "Job Status"
      },
      "JobStatusAction": {
        "type": "object",
        "properties": {
          "action_name": {
            "type": "string",
            "description": "Action name"
          },
          "status_code": {
            "$ref": "#/components/schemas/JobStatusEnum"
          },
          "status_message": {
            "type": "string",
            "description": "Action Job status message - to be displayed along with the action_status_code"
          },
          "bastion_status_code": {
            "$ref": "#/components/schemas/ResourceStatusEnum"
          },
          "bastion_status_message": {
            "type": "string",
            "description": "Bastion status message - to be displayed along with the bastion_status_code; "
          },
          "targets_status_code": {
            "$ref": "#/components/schemas/ResourceStatusEnum"
          },
          "targets_status_message": {
            "type": "string",
            "description": "Aggregated status message for all target resources,  to be displayed along with the targets_status_code; "
          },
          "updated_at": {
            "type": "string",
            "description": "Job status updation timestamp",
            "format": "date-time",
            "example": "2019-11-06T16:19:32Z"
          }
        },
        "description": "Action Job Status"
      },
      "TargetResourceset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Target name"
          },
          "type": {
            "type": "string",
            "description": "Target type (cluster, vsi, icd, vpc)"
          },
          "description": {
            "type": "string",
            "description": "Target description"
          },
          "resource_query": {
            "type": "string",
            "description": "Resource selection query string"
          },
          "credential": {
            "type": "string",
            "description": "Override credential for each resource.  Reference to credentials values, used by all resources"
          },
          "id": {
            "type": "string",
            "description": "Target id",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "description": "Targets creation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "created_by": {
            "type": "string",
            "description": "Email address of user who created the Targets",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "Targets updation time",
            "format": "date-time",
            "readOnly": true,
            "example": "2019-11-06T16:19:32Z"
          },
          "updated_by": {
            "type": "string",
            "description": "Email address of user who updated the Targets",
            "readOnly": true
          },
          "sys_lock": {
            "$ref": "#/components/schemas/SystemLock"
          },
          "resource_ids": {
            "type": "array",
            "description": "Array of resource ids",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Complete Target details with user inputs and system generated data"
      },
      "KMSDiscovery": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "description": "Total number of records",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "description": "Number of records returned",
            "format": "int64"
          },
          "offset": {
            "type": "integer",
            "description": "Skipped number of records",
            "format": "int64"
          },
          "kms_instances": {
            "type": "array",
            "description": "List of KMS instances",
            "items": {
              "$ref": "#/components/schemas/KMSInstances"
            }
          }
        },
        "description": "Discovered KMS instances"
      },
      "KMSInstances": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location"
          },
          "encryption_scheme": {
            "type": "string",
            "description": "Encryption schema"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource groups"
          },
          "kms_crn": {
            "type": "string",
            "description": "KMS CRN"
          },
          "kms_name": {
            "type": "string",
            "description": "KMS Name"
          },
          "kms_private_endpoint": {
            "type": "string",
            "description": "KMS private endpoint"
          },
          "kms_public_endpoint": {
            "type": "string",
            "description": "KMS public endpoint"
          },
          "keys": {
            "type": "array",
            "description": "List of keys",
            "items": {
              "$ref": "#/components/schemas/KMSInstances_keys"
            }
          }
        },
        "description": "KMS Instances"
      },
      "KMSSettings": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location"
          },
          "encryption_scheme": {
            "type": "string",
            "description": "Encryption scheme"
          },
          "resource_group": {
            "type": "string",
            "description": "Resource group"
          },
          "primary_crk": {
            "$ref": "#/components/schemas/KMSSettings_primary_crk"
          },
          "secondary_crk": {
            "$ref": "#/components/schemas/KMSSettings_secondary_crk"
          }
        },
        "description": "User defined KMS Settings details"
      },
      "JobStateData_summary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "State summary feature name"
          },
          "type": {
            "type": "string",
            "description": "State summary feature type",
            "enum": [
              "number",
              "string"
            ]
          },
          "value": {
            "type": "string",
            "description": "State summary feature value"
          }
        }
      },
      "OutputValues_inner": {
        "type": "object",
        "properties": {
          "folder": {
            "type": "string",
            "description": "Output variable name"
          },
          "id": {
            "type": "string",
            "description": "Output variable id"
          },
          "output_values": {
            "type": "array",
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of Output values",
            "items": {
              "type": "object"
            }
          },
          "value_type": {
            "type": "string",
            "description": "Output variable type"
          }
        }
      },
      "ExternalSource_git": {
        "type": "object",
        "properties": {
          "git_repo_url": {
            "type": "string",
            "description": "URL to the GIT Repo that can be used to clone the template"
          },
          "git_token": {
            "type": "string",
            "description": "Personal Access Token to connect to Git URLs",
            "format": "password"
          },
          "git_repo_folder": {
            "type": "string",
            "description": "Name of the folder in the Git Repo, that contains the template"
          },
          "git_release": {
            "type": "string",
            "description": "Name of the release tag, used to fetch the Git Repo"
          },
          "git_branch": {
            "type": "string",
            "description": "Name of the branch, used to fetch the Git Repo"
          }
        },
        "description": "Connection details to Git source"
      },
      "Action_state": {
        "type": "object",
        "properties": {
          "status_code": {
            "$ref": "#/components/schemas/AutomationStatusEnum"
          },
          "status_message": {
            "type": "string",
            "description": "Automation status message - to be displayed along with the status_code"
          }
        },
        "description": "Computed state of the Action"
      },
      "JobLogSummary_log_errors": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "string",
            "description": "Error code in the Log"
          },
          "error_msg": {
            "type": "string",
            "description": "Summary error message in the log"
          },
          "error_count": {
            "type": "number",
            "description": "Number of occurrence"
          }
        }
      },
      "JobLogSummary_repo_download_job": {
        "type": "object",
        "properties": {
          "scanned_file_count": {
            "type": "number",
            "description": "Number of files scanned",
            "readOnly": true
          },
          "quarantined_file_count": {
            "type": "number",
            "description": "Number of files quarantined",
            "readOnly": true
          },
          "detected_filetype": {
            "type": "string",
            "description": "Detected template or data file type",
            "readOnly": true
          },
          "inputs_count": {
            "type": "string",
            "description": "Number of inputs detected",
            "readOnly": true
          },
          "outputs_count": {
            "type": "string",
            "description": "Number of outputs detected",
            "readOnly": true
          }
        },
        "description": "Repo download Job log summary"
      },
      "JobLogSummary_action_job_recap": {
        "type": "object",
        "properties": {
          "target": {
            "type": "array",
            "description": "List of target or host name",
            "items": {
              "type": "string"
            }
          },
          "ok": {
            "type": "number",
            "description": "Number of OK"
          },
          "changed": {
            "type": "number",
            "description": "Number of changed"
          },
          "failed": {
            "type": "number",
            "description": "Number of failed"
          },
          "skipped": {
            "type": "number",
            "description": "Number of skipped"
          },
          "unreachable": {
            "type": "number",
            "description": "Number of unreachable"
          }
        },
        "description": "Recap records"
      },
      "JobLogSummary_action_job": {
        "type": "object",
        "properties": {
          "target_count": {
            "type": "number",
            "description": "number of targets or hosts",
            "readOnly": true
          },
          "task_count": {
            "type": "number",
            "description": "number of tasks in playbook",
            "readOnly": true
          },
          "play_count": {
            "type": "number",
            "description": "number of plays in playbook",
            "readOnly": true
          },
          "recap": {
            "$ref": "#/components/schemas/JobLogSummary_action_job_recap"
          }
        },
        "description": "Flow Job log summary"
      },
      "KMSInstances_keys": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Key name"
          },
          "crn": {
            "type": "string",
            "description": "CRN of the Key"
          },
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "KMSSettings_primary_crk": {
        "type": "object",
        "properties": {
          "kms_name": {
            "type": "string",
            "description": "Primary KMS name"
          },
          "kms_private_endpoint": {
            "type": "string",
            "description": "Primary KMS endpoint"
          },
          "key_crn": {
            "type": "string",
            "description": "CRN of the Primary Key"
          }
        },
        "description": "Primary CRK details"
      },
      "KMSSettings_secondary_crk": {
        "type": "object",
        "properties": {
          "kms_name": {
            "type": "string",
            "description": "Secondary KMS name"
          },
          "kms_private_endpoint": {
            "type": "string",
            "description": "Secondary KMS endpoint"
          },
          "key_crn": {
            "type": "string",
            "description": "CRN of the Secondary Key"
          }
        },
        "description": "Secondary CRK details"
      }
    }
  }
}